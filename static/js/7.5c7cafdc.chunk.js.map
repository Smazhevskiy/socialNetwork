{"version":3,"sources":["assets/imagies/icons8-user-male.svg","pages/users/User.tsx","pages/users/Users.tsx","redux/users-selectors.ts","pages/users/UsersContainer.tsx"],"names":["User","user","follow","unfollow","followingInProgress","className","s","grid","to","id","photo","src","photos","small","userWithoutPhoto","alt","followed","disabled","some","onClick","name","status","Users","React","memo","props","users","currentPage","pageSize","totalUsersCount","onPageChanged","pagesCount","Math","ceil","pages","i","push","handleChangePage","e","curPage","Pagination","defaultPage","page","onChange","count","color","shape","map","u","getUsersSelector","createSelector","state","usersPage","getPageSizeSelector","getTotalUsersCountSelector","getCurrentPageSelector","getIsFetchingSelector","isFetching","getFollowingInProgressSelector","UsersContainer","pageNumber","getUsers","this","Preloader","Component","compose","connect","setCurrentPage","requestUsers"],"mappings":"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","file":"static/js/7.5c7cafdc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/icons8-user-male.be2cd3f6.svg\";","import React, {FC} from 'react'\r\nimport s from \"./User.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport userWithoutPhoto from './../../../src/assets/imagies/icons8-user-male.svg'\r\nimport {UserType} from \"../../dal/api\";\r\n\r\n\r\ninterface userProps {\r\n    user: UserType\r\n    followingInProgress: number[]\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n}\r\n\r\nexport const User: FC<userProps> = ({user, follow, unfollow, followingInProgress}) => {\r\n    return (\r\n        <div key={user.id} className={s.grid}>\r\n            <NavLink to={`/profile/${user.id} `}>\r\n                <img className={s.photo}\r\n                     src={user.photos.small !== null\r\n                         ? user.photos.small\r\n                         : userWithoutPhoto}\r\n                     alt='animated-user'/>\r\n            </NavLink>\r\n\r\n            <div className={s.follow}>\r\n                {user.followed\r\n                    ? <button disabled={followingInProgress.some(id => id === user.id)}\r\n                              onClick={() => {\r\n                                  unfollow(user.id)\r\n                              }}>\r\n                        Unfollow</button>\r\n                     : <button disabled={false}      //followingInProgress.some(id => id === user.id)\r\n                              onClick={() => {\r\n                                  follow(user.id)\r\n                              }}>\r\n                        follow</button>}\r\n            </div>\r\n            <div className={s.name}>{user.name}</div>\r\n            <div className={s.status}>{user.status}</div>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, FC} from 'react'\nimport {UserType} from '../../dal/api'\nimport Pagination from '@material-ui/lab/Pagination'\nimport {User} from './User'\n\n\nexport type usersPropsType = {\n    totalUsersCount: number\n    currentPage: number\n    onPageChanged: (pageNumber: number) => void\n    users: UserType[]\n    pageSize: number\n    followingInProgress: number[]\n    follow: (userId: number) => void\n    unfollow: (userId: number) => void\n\n}\n\n\nexport const Users: FC<usersPropsType> = React.memo((props) => {\n    const {\n        users,\n        currentPage,\n        pageSize,\n        totalUsersCount,\n        onPageChanged,\n        followingInProgress,\n        follow,\n        unfollow,\n    } = props\n\n    let pagesCount = Math.ceil(totalUsersCount / pageSize)\n    let pages = []\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i)\n    }\n\n    const handleChangePage = (e: ChangeEvent<unknown>, curPage: number) => {\n        onPageChanged(curPage)\n    }\n\n    return (\n        <div>\n            <Pagination defaultPage={1} page={currentPage} onChange={handleChangePage} count={pagesCount}\n                        color={'secondary'}\n                        shape=\"rounded\"\n            />\n            <div>\n                {\n                    users.map(u => <User\n                        user={u}\n                        followingInProgress={followingInProgress}\n                        follow={follow}\n                        unfollow={unfollow}\n                    />)\n                }\n            </div>\n\n\n            <Pagination onChange={handleChangePage} count={pagesCount} color={'secondary'} shape=\"rounded\"/>\n        </div>\n    )\n\n\n})","import {AppRootStateType} from \"./redux-store\";\r\nimport {createSelector} from \"reselect\";\r\n\r\n\r\nconst getUsers = (state: AppRootStateType) => {\r\n    return state.usersPage.users\r\n}\r\n\r\n\r\nexport const getUsersSelector = createSelector(getUsers, (users) => {\r\n    return users\r\n})\r\n\r\nexport const getPageSizeSelector = (state: AppRootStateType) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCountSelector = (state: AppRootStateType) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPageSelector = (state: AppRootStateType) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetchingSelector = (state: AppRootStateType) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgressSelector = (state: AppRootStateType) => {\r\n    return state.usersPage.followingInProgress;\r\n}\r\n\r\n\r\n","import {connect} from \"react-redux\";\nimport {AppRootStateType} from \"../../redux/redux-store\";\nimport {\n    follow,\n    requestUsers,\n    setCurrentPage,\n    unfollow,\n} from \"../../redux/users-reducer\";\nimport React from \"react\";\nimport {Users} from \"./Users\";\nimport {Preloader} from \"../../components/common/Preloader/Preloader\";\nimport {compose} from \"redux\";\nimport {UserType} from \"../../dal/api\";\nimport {\n    getCurrentPageSelector,\n    getFollowingInProgressSelector,\n    getIsFetchingSelector,\n    getPageSizeSelector,\n    getTotalUsersCountSelector,\n    getUsersSelector\n} from \"../../redux/users-selectors\";\n\ntype MapStatePropsType = {\n    users: UserType[]\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n    isFetching: boolean\n    followingInProgress: number[]\n}\ntype MapDispatchToProps = {\n    follow: (userId: number) => void\n    unfollow: (userId: number) => void\n    setCurrentPage: (pageNumber: number) => void\n    getUsers: (currentPage: number, pageSize: number) => void\n}\nexport type UsersApiComponentPropsType = MapStatePropsType & MapDispatchToProps\n\nexport class UsersContainer extends React.Component<UsersApiComponentPropsType> {\n    componentDidMount() {\n        this.props.getUsers(this.props.currentPage, this.props.pageSize)\n    }\n\n    onPageChanged = (pageNumber: number) => {\n        this.props.getUsers(pageNumber, this.props.pageSize)\n    }\n\n    render() {\n        return <>\n            {this.props.isFetching &&\n            <Preloader/>}\n            <Users\n                totalUsersCount={this.props.totalUsersCount}\n                pageSize={this.props.pageSize}\n                currentPage={this.props.currentPage}\n                onPageChanged={this.onPageChanged}\n                users={this.props.users}\n                follow={this.props.follow}\n                unfollow={this.props.unfollow}\n                followingInProgress={this.props.followingInProgress}\n            />\n        </>\n    }\n}\n\nconst mapStateToProps = (state: AppRootStateType): MapStatePropsType => {\n    return {\n        users: getUsersSelector(state),\n        pageSize: getPageSizeSelector(state),\n        totalUsersCount: getTotalUsersCountSelector(state),\n        currentPage: getCurrentPageSelector(state),\n        isFetching: getIsFetchingSelector(state),\n        followingInProgress: getFollowingInProgressSelector(state),\n\n    }\n}\n\nexport default compose<React.ComponentType>(\n    connect(mapStateToProps,\n        {\n            setCurrentPage,\n            getUsers: requestUsers,\n            follow,\n            unfollow,\n        })\n)(UsersContainer)\n\n"],"sourceRoot":""}