{"version":3,"sources":["components/navbar/Navbar.module.css","components/footer/Footer.module.css","pages/profile/ProfileInfo/ProfileInfo.module.css","redux/profile-reducer.ts","reportWebVitals.ts","dal/api.ts","redux/dialogs-reducer.ts","redux/users-reducer.ts","redux/auth-reducer.ts","redux/redux-store.ts","components/navbar/Navbar.tsx","components/footer/Footer.tsx","pages/News/News.tsx","pages/Music/Music.tsx","pages/Settings/Settings.tsx","pages/dialogs/DialogItem/DialogsItem.tsx","pages/dialogs/Message/Message.tsx","components/common/formsControl/FormsControl.tsx","utils/validate/validators.ts","pages/dialogs/SendMessage.tsx","pages/dialogs/Dialogs.tsx","Hoc/withAuthRedirect.tsx","pages/dialogs/DialogsContainer.ts","assets/imagies/icons8-user-male.svg","pages/users/Users.tsx","assets/imagies/Bean Eater-1.2s-197px.svg","components/common/Preloader/Preloader.tsx","pages/users/usersContainer.tsx","pages/profile/ProfileInfo/profileStatus.tsx","pages/profile/ProfileInfo/ProfileInfo.tsx","pages/profile/MyPosts/Post/Post.tsx","pages/profile/MyPosts/AddPost.tsx","pages/profile/MyPosts/MyPosts.tsx","pages/profile/MyPosts/MyPostsContainer.ts","pages/profile/Profile.tsx","pages/profile/ProfileContainer.tsx","components/header/Header.tsx","components/header/HeaderContainer.tsx","components/loginForm/LoginForm.tsx","pages/login/loginPage.tsx","App.tsx","index.tsx","pages/dialogs/DialogItem/DialogItem.module.css","pages/dialogs/Dialogs.module.css","pages/profile/MyPosts/MyPosts.module.css","pages/users/users.module.css","components/common/formsControl/FormsControl.module.css","pages/profile/MyPosts/Post/Post.module.css","pages/News/News.module.css","components/header/Header.module.css","pages/login/loginPage.module.css"],"names":["module","exports","PROFILE_ACTIONS_TYPE","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","create","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","userId","post","delete","console","log","profileAPI","getUserProfile","getUserStatus","updateUserStatus","status","put","authAPI","DIALOGS_ACTIONS_TYPE","setUserStatus","type","initialState","posts","id","message","likeCount","profile","profileReducer","state","action","ADD_POST","newPost","newPostText","SET_USERS_PROFILE","SET_STATUS","USERS_ACTIONS_TYPE","dialogs","name","img","messages","dialogsReducer","SEND_MESSAGE","newMessage","messageText","AUTH_ACTIONS_TYPE","users","totalUsersCount","isFetching","followingInProgress","toggleIsFetching","toggleFollowingProgress","usersReducer","FOLLOW","map","user","followed","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","count","TOGGLE_IS_FETCHING","TOGGLE_IS_FETCHING_PROGRESS","filter","email","login","isAuth","rootReducer","combineReducers","profilePage","dialogsPage","usersPage","auth","SET_USER_DATA","data","form","formReducer","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","Navbar","className","classes","nav","item","to","activeClassName","active","friendName","grid","Footer","footer","News","news","newsTitle","Music","Settings","DialogItem","props","path","dialog","src","alt","dialogAvatar","dialogText","dialogUsername","Message","Textarea","input","meta","hasError","touched","error","styles","formControl","Input","required","value","undefined","maxLengthCreator","symbalLength","length","maxLengthCreator100","DialogsReduxForm","reduxForm","onSubmit","handleSubmit","Field","placeholder","component","validate","Dialogs","sendMessage","dialogsElements","messagesElements","dialogsHeader","dialogItems","values","sendNewMessage","mstp","WithAuthRedirect","Component","connect","rest","compose","dispatch","sendMessageCreator","Users","onPageChanged","follow","unfollow","pagesCount","Math","ceil","pages","i","push","pageNumbers","p","onClick","s","selected","style","marginBottom","photo","photos","small","userWithoutPhoto","disabled","some","Preloader","position","top","left","preloader","UsersContainer","pageNumber","getUsers","this","React","setCurrentPage","response","items","totalCount","resultCode","followSuccess","unFollowSuccess","ProfileStatus","editMode","onDoubleClick","setState","onBlur","e","updateStatus","currentTarget","onChange","onEnter","key","prevProps","prevState","onTouchStart","autoFocus","onKeyPress","ProfileInfo","content","fullName","aboutMe","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","lookingForAJobDescription","Post","avatar","like","maxLengthCreator10","createPostArea","createPostBtn","MyPosts","postsElement","createPost","createPostTitle","addPost","MyPostsContainer","addPostActionCreator","Profile","ProfileContainer","match","params","setUserProfile","withRouter","Header","header","loginBlock","HeaderContainer","getAuthUserData","setUserData","LoginReduxForm","display","alignItems","htmlFor","LoginPage","loginPage","loginForm","App","render","DialogsContainer","ReactDOM","StrictMode","document","getElementById"],"mappings":"0FACAA,EAAOC,QAAU,CAAC,IAAM,oBAAoB,KAAO,qBAAqB,OAAS,uBAAuB,KAAO,qBAAqB,WAAa,6B,oBCAjJD,EAAOC,QAAU,CAAC,OAAS,yB,0CCA3BD,EAAOC,QAAU,CAAC,QAAU,+B,wFCIhBC,E,gBCSGC,G,OAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,+BCNRQ,E,OAAWC,EAAMC,OAAO,CAC1BC,iBAAiB,EACjBC,QAAS,gDACTC,QAAS,CACL,UAAW,0CAGNC,EAAW,WACsC,IAAjDC,EAAgD,uDAA1B,EAAGC,EAAuB,uDAAJ,GACjD,OAAOR,EAASS,IAAT,qBAA2BF,EAA3B,kBAAgDC,KAFlDF,EAAW,SAIbI,GACH,OAAOV,EAASW,KAAT,iBAAwBD,KAL1BJ,EAAW,SAOXI,GACL,OAAOV,EAASY,OAAT,iBAA0BF,KAR5BJ,EAAW,SAWLI,GAEX,OADAG,QAAQC,IAAI,uCACLC,EAAWC,eAAeN,IAI5BK,EAAa,CACtBC,eADsB,SACPN,GACX,OAAOV,EAASS,IAAT,kBAAwBC,KAEnCO,cAJsB,SAIRP,GACV,OAAOV,EAASS,IAAT,yBAA+BC,KAE1CQ,iBAPsB,SAOLC,GACb,OAAOnB,EAASoB,IAAT,iBAA+B,CAClCD,OAAQA,MAKPE,EAAU,WAEf,OAAOrB,EAASS,IAAT,a,SFtCHnB,K,oBAAAA,E,sCAAAA,E,yBAAAA,M,KA4BL,IGhCKgC,EHmCCC,EAAgB,SAACJ,GAAD,MAAqB,CAACK,KAAM,aAAcL,WA+BnEM,EAAe,CACfC,MAAO,CACH,CAACC,GAAI,EAAGC,QAAS,YAAaC,UAAW,IAE7CC,QAAS,KACTX,OAAQ,IAiCGY,EA/BQ,WAAqG,IAApGC,EAAmG,uDAAlEP,EAAcQ,EAAoD,uCACvH,OAAQA,EAAOT,MACX,KAAKlC,EAAqB4C,SACtB,IAAIC,EAAoB,CACpBR,GAAI,EACJC,QAASK,EAAOG,YAChBP,UAAW,GAEf,MAA2B,KAAvBI,EAAOG,YACA,2BACAJ,GADP,IAEIN,MAAM,GAAD,mBAAMM,EAAMN,OAAZ,CAAmBS,MAGzBH,EAEX,KAAK1C,EAAqB+C,kBACtB,OAAO,2BACAL,GADP,IAEIF,QAASG,EAAOH,UAGxB,KAAKxC,EAAqBgD,WACtB,OAAO,2BACAN,GADP,IACcb,OAAQc,EAAOd,SAGjC,QACI,OAAOa,K,SGrGPV,K,4BAAAA,E,mDAAAA,M,KAQZ,ICLYiB,EDKRd,EAAe,CACfe,QAAS,CACL,CACIb,GAAI,EACJc,KAAM,QACNC,IAAK,6EAET,CACIf,GAAI,EACJc,KAAM,SACNC,IAAK,gFAET,CACIf,GAAI,EACJc,KAAM,UACNC,IAAK,0EAGbC,SAAU,CACN,CAAChB,GAAI,EAAGC,QAAS,aACjB,CAACD,GAAI,EAAGC,QAAS,oBACjB,CAACD,GAAI,EAAGC,QAAS,eAsBVgB,EAnBQ,WAA+F,IAA9FZ,EAA6F,uDAA/DP,EAAcQ,EAAiD,uCAEjH,OAAQA,EAAOT,MACX,KAAKF,EAAqBuB,aACtB,IAAIC,EAA0B,CAACnB,GAAI,EAAGC,QAASK,EAAOc,aACtD,MAA2B,KAAvBd,EAAOc,YACA,2BACAf,GADP,IAEIW,SAAS,GAAD,mBAAMX,EAAMW,UAAZ,CAAsBG,MAG/Bd,EAEX,QACI,OAAOA,K,SC3CPO,K,gBAAAA,E,oBAAAA,E,sBAAAA,E,oCAAAA,E,8CAAAA,E,wCAAAA,E,2DAAAA,M,KA6BZ,IC7BYS,ED6BRvB,EAAe,CACfwB,MAAO,GACPzC,SAAU,GACV0C,gBAAiB,EACjB3C,YAAa,EACb4C,YAAY,EACZC,oBAAqB,IAUZC,EAAmB,SAACF,GAAD,MAA0B,CAAC3B,KAAM,qBAAsB2B,WAAYA,IACtFG,EAA0B,SAACH,EAAqBzC,GAAtB,MAA0C,CAC7Ec,KAAM,8BACN2B,aACAzC,WAmGW6C,EA1Da,WAAuF,IAAtFvB,EAAqF,uDAA3DP,EAAcQ,EAA6C,uCAC9G,OAAQA,EAAOT,MACX,KAAKe,EAAmBiB,OACpB,OAAO,2BACAxB,GADP,IAEIiB,MAAOjB,EAAMiB,MAAMQ,KAAI,SAAAC,GACnB,OAAIA,EAAK/B,KAAOM,EAAOvB,OACZ,2BAAIgD,GAAX,IAAiBC,UAAU,IAExBD,OAGnB,KAAKnB,EAAmBqB,SACpB,OAAO,2BACA5B,GADP,IAEIiB,MAAOjB,EAAMiB,MAAMQ,KAAI,SAAAC,GACnB,OAAIA,EAAK/B,KAAOM,EAAOvB,OACZ,2BAAIgD,GAAX,IAAiBC,UAAU,IAExBD,OAGnB,KAAKnB,EAAmBsB,UACpB,OAAO,2BAAI7B,GAAX,IAAkBiB,MAAOhB,EAAOgB,QAEpC,KAAMV,EAAmBuB,iBACrB,OAAO,2BAAI9B,GAAX,IAAkBzB,YAAa0B,EAAO1B,cAE1C,KAAKgC,EAAmBwB,sBACpB,OAAO,2BAAI/B,GAAX,IAAkBkB,gBAAiBjB,EAAO+B,QAE9C,KAAKzB,EAAmB0B,mBACpB,OAAO,2BAAIjC,GAAX,IAAkBmB,WAAYlB,EAAOkB,aAEzC,KAAKZ,EAAmB2B,4BACpB,OAAO,2BACAlC,GADP,IAEIoB,oBAAqBnB,EAAOkB,WAAP,sBACXnB,EAAMoB,qBADK,CACgBnB,EAAOvB,SACtCsB,EAAMoB,oBAAoBe,QAAO,SAAAxC,GAAE,OAAIA,IAAOM,EAAOvB,YAGnE,QACI,OAAOsB,K,SCrIPgB,K,+BAAAA,M,KAMZ,IAAIvB,EAAe,CACff,OAAQ,KACR0D,MAAO,KACPC,MAAO,KACPC,QAAQ,G,2BCsBRC,EAAcC,0BAAgB,CAC9BC,YAAa1C,EACb2C,YAAa9B,EACb+B,UAAYpB,EACZqB,KDRuB,WAAmF,IAAlF5C,EAAiF,uDAAxDP,EAAaQ,EAA2C,uCACxG,OAAQA,EAAOT,MACX,KAAKwB,EAAkB6B,cACnB,OAAO,uCACA7C,GACAC,EAAO6C,MAFd,IAGIR,QAAQ,IAGhB,QAAS,OAAOtC,ICArB+C,KAAMC,MAYKC,EARHC,sBACRX,EAAaY,8BACTC,0BAAgBC,O,yDCNTC,EAnCA,WAEX,OACI,sBAAKC,UAAWC,IAAQC,IAAxB,UACI,qBAAKF,UAAWC,IAAQE,KAAxB,SACI,cAAC,IAAD,CAASC,GAAG,WACHC,gBAAiBJ,IAAQK,OADlC,uBAGJ,qBAAKN,UAAWC,IAAQE,KAAxB,SACI,cAAC,IAAD,CAASC,GAAG,SACHC,gBAAiBJ,IAAQK,OADlC,qBAGJ,qBAAKN,UAAS,UAAKC,IAAQE,KAAb,YAAqBF,IAAQK,QAA3C,SACI,cAAC,IAAD,CAASF,GAAG,WACHC,gBAAiBJ,IAAQK,OADlC,wBAGJ,qBAAKN,UAAWC,IAAQE,KAAxB,SACI,cAAC,IAAD,CAASC,GAAG,QACHC,gBAAiBJ,IAAQK,OADlC,oBAGJ,qBAAKN,UAAWC,IAAQE,KAAxB,SACI,cAAC,IAAD,CAASC,GAAG,SACHC,gBAAiBJ,IAAQK,OADlC,qBAGJ,qBAAKN,UAAWC,IAAQE,KAAxB,SACI,cAAC,IAAD,CAASC,GAAG,YACHC,gBAAiBJ,IAAQK,OADlC,wBAGJ,gCACI,cAAC,IAAD,CAASF,GAAG,WAAWJ,UAAWC,IAAQM,WAA1C,qBACA,qBAAKP,UAAWC,IAAQO,KAAxB,sB,kBC3BDC,EAPA,WACX,OACI,wBAAQT,UAAWC,IAAQS,OAA3B,qB,wBCQOC,EATF,WACT,OACI,8BACI,qBAAKX,UAAWC,IAAQW,KAAxB,SACI,qBAAKZ,UAAWC,IAAQY,UAAxB,uBCEDC,EAPD,WACV,OACI,yCCKOC,EAPE,WACb,OACI,4C,qCCkBOC,GAX8B,SAACC,GAC1C,IAAIC,EAAO,YAAcD,EAAM7E,GAC/B,OACI,sBAAK4D,UAAS,UAAKC,KAAQkB,OAAb,YAAuBlB,KAAQK,OAA/B,YAAyCL,KAAQO,MAA/D,UACI,cAAC,IAAD,CAASJ,GAAIc,EAAb,SAAoB,qBAAKE,IAAKH,EAAM9D,IAAKkE,IAAI,KAAKrB,UAAWC,KAAQqB,iBACrE,qBAAKtB,UAAWC,KAAQsB,WAAxB,uBACA,cAAC,IAAD,CAASnB,GAAIc,EAAMb,gBAAiBJ,KAAQK,OAASN,UAAWC,KAAQuB,eAAxE,SAAyFP,EAAM/D,WCF5FuE,GANwB,SAACR,GACpC,OACI,qBAAKjB,UAAWC,IAAQ5D,QAAxB,SAAmC4E,EAAM5E,W,iDCFpCqF,GAAqD,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,MAAMC,EAAmB,EAAnBA,KAAQX,EAAW,iCACnFY,EAAWD,EAAKE,SAAWF,EAAKG,MAEtC,OACI,sBAAK/B,UAAS,UAAKgC,KAAOC,YAAZ,cAA6BJ,EAAWG,KAAOD,MAAQ,GAAvD,KAAd,UACI,8BACI,oDAAcJ,GAAWV,MAE5BY,GAAY,+BAAOD,EAAKG,YAIxBG,GAAkD,SAAC,GAA2B,IAA1BP,EAAyB,EAAzBA,MAAMC,EAAmB,EAAnBA,KAAQX,EAAW,iCAChFY,EAAWD,EAAKE,SAAWF,EAAKG,MAEtC,OACI,sBAAK/B,UAAS,UAAKgC,KAAOC,YAAZ,cAA6BJ,EAAWG,KAAOD,MAAQ,GAAvD,KAAd,UACI,8BACI,iDAAWJ,GAAWV,MAEzBY,GAAY,+BAAOD,EAAKG,YC3BxBI,GAAW,SAACC,GACvB,OAASA,OAAOC,EAAY,gBAGjBC,GAAmB,SAACC,GAC7B,OAAO,SAACH,GACJ,OAAIA,EAAMI,OAASD,EACT,iBAAN,OAAwBA,EAAxB,iBAEA,ICLNE,GAAqBH,GAAiB,KC8B/BI,GAAmBC,aAAmE,CAC/FnD,KAAM,yBADsBmD,ED7B2E,SAAC1B,GAExG,OACI,uBAAM2B,SAAU3B,EAAM4B,aAAtB,UACI,cAACC,GAAA,EAAD,CACIC,YAAa,cACbC,UAAWtB,GACXxE,KAAM,iBACN+F,SAAU,CAACd,GAASM,IAJxB,eAMA,gDCsBGS,GA/B6B,SAAC,GAAgC,IAA/B/D,EAA8B,EAA9BA,YAAagE,EAAiB,EAAjBA,YACnDC,EAAkBjE,EAAYlC,QAC7BiB,KAAI,SAAAiD,GAAM,OAAI,cAAC,GAAD,CAA4BjE,KAAMiE,EAAOjE,KAAMd,GAAI+E,EAAO/E,GAAIe,IAAKgE,EAAOhE,KAAzDgE,EAAO/E,OACvCiH,EAAmBlE,EAAY/B,SAC9Bc,KAAI,SAAA7B,GAAO,OAAI,cAAC,GAAD,CAA0BA,QAASA,EAAQA,QAASD,GAAIC,EAAQD,IAAlDC,EAAQD,OAM1C,OACI,sBAAK4D,UAAWC,IAAQhD,QAAxB,UACI,oBAAI+C,UAAWC,IAAQqD,cAAvB,sBACA,qBAAKtD,UAAWC,IAAQsD,YAAxB,SACKH,IAEL,sBAAKpD,UAAWC,IAAQ7C,SAAxB,UACI,8BAAMiG,IACN,cAACX,GAAD,CAAkBE,SAZR,SAACY,GACnBL,EAAYK,EAAOC,0B,SCNrBC,GAAO,SAACjH,GACV,MAAO,CACHsC,OAAOtC,EAAM4C,KAAKN,SAInB,SAAS4E,GAAqBC,GAUjC,OAFiCC,aAAQH,GAARG,EAPP,SAAC5C,GACAA,EAAlBlC,OAD6C,IACnC+E,EADkC,aAC1B7C,EAD0B,YAEjD,OAAKA,EAAMlC,OAGJ,cAAC6E,EAAD,eAAeE,IAFX,cAAC,IAAD,CAAU1D,GAAI,cCJjC,IAce2D,qBACXF,cAfoB,SAACpH,GACrB,MAAO,CACH0C,YAAa1C,EAAM0C,gBAGA,SAAC6E,GACxB,MAAO,CACHb,YAAa,SAAC3F,GACVwG,EhB2BsB,SAACxG,GAAD,MAAyB,CAACvB,KAAM,eAAeuB,egB3B5DyG,CAAmBzG,SAQpCmG,GAFWI,CAGbb,I,wDChCa,OAA0B,6CCgB5BgB,GAA4B,SAAAjD,GAerC,IAf8C,IAG1CvD,EAQAuD,EARAvD,MACA1C,EAOAiG,EAPAjG,YACAC,EAMAgG,EANAhG,SACA0C,EAKAsD,EALAtD,gBACAwG,EAIAlD,EAJAkD,cACAtG,EAGAoD,EAHApD,oBACAuG,EAEAnD,EAFAmD,OACAC,EACApD,EADAoD,SAGAC,EAAaC,KAAKC,KAAK7G,EAAkB1C,GACzCwJ,EAAQ,GACHC,EAAI,EAAGA,GAAKJ,EAAYI,IAC7BD,EAAME,KAAKD,GAEf,IAAME,EAAcH,EAAMvG,KAAI,SAAC2G,EAAGH,GAAJ,OAAU,sBACpCI,QAAS,kBAAMX,EAAcU,IACrB7E,UAAWhF,IAAgB6J,EAAIE,KAAEC,SAAW,GAFhB,SAGtCH,GADOH,MAET,OACI,gCACI,qBAAKO,MAAO,CAACC,aAAc,QAA3B,SACKN,IAEJlH,EAAMQ,KAAI,SAACC,GACR,OACI,sBAAmB6B,UAAW+E,KAAEvE,KAAhC,UACI,cAAC,IAAD,CAASJ,GAAE,mBAAcjC,EAAK/B,GAAnB,KAAX,SACI,qBAAK4D,UAAW+E,KAAEI,MACb/D,IAA2B,OAAtBjD,EAAKiH,OAAOC,MACXlH,EAAKiH,OAAOC,MACZC,GACNjE,IAAI,oBAGb,qBAAKrB,UAAW+E,KAAEX,OAAlB,SACKjG,EAAKC,SACA,wBAAQmH,SAAU1H,EAAoB2H,MAAK,SAAApJ,GAAE,OAAIA,IAAO+B,EAAK/B,MACrD0I,QAAS,WACLT,EAASlG,EAAK/B,KAF1B,sBAKA,wBAAQmJ,SAAU1H,EAAoB2H,MAAK,SAAApJ,GAAE,OAAIA,IAAO+B,EAAK/B,MACrD0I,QAAS,WACLV,EAAOjG,EAAK/B,KAFxB,sBAMV,qBAAK4D,UAAW+E,KAAE7H,KAAlB,SAAyBiB,EAAKjB,OAC9B,qBAAK8C,UAAW+E,KAAEnJ,OAAlB,SAA2BuC,EAAKvC,WAvB1BuC,EAAK/B,WC7CpB,OAA0B,kDCM5BqJ,GAAmC,WAC5C,OACI,qBAAKR,MAAO,CAACS,SAAU,WAAYC,IAAK,MAAOC,KAAM,OAChDxE,IAAKyE,GAAWxE,IAAI,aCsBpByE,GAAb,+MAKI3B,cAAgB,SAAC4B,GACb,EAAK9E,MAAM+E,SAASD,EAAW,EAAK9E,MAAMhG,WANlD,wDACI,WACGgL,KAAKhF,MAAM+E,SAASC,KAAKhF,MAAMjG,YAAYiL,KAAKhF,MAAMhG,YAF7D,oBASI,WACI,OAAO,qCACFgL,KAAKhF,MAAMrD,YACZ,cAAC,GAAD,IACA,cAAC,GAAD,CACID,gBAAiBsI,KAAKhF,MAAMtD,gBAC5B1C,SAAUgL,KAAKhF,MAAMhG,SACrBD,YAAaiL,KAAKhF,MAAMjG,YACxBmJ,cAAe8B,KAAK9B,cACpBzG,MAAOuI,KAAKhF,MAAMvD,MAClB0G,OAAQ6B,KAAKhF,MAAMmD,OACnBC,SAAU4B,KAAKhF,MAAMoD,SACrBxG,oBAAqBoI,KAAKhF,MAAMpD,6BArBhD,GAAoCqI,IAAMtC,WAsC3BG,qBACXF,cAZoB,SAACpH,GACrB,MAAO,CACHiB,MAAOjB,EAAM2C,UAAU1B,MACvBzC,SAAUwB,EAAM2C,UAAUnE,SAC1B0C,gBAAiBlB,EAAM2C,UAAUzB,gBACjC3C,YAAayB,EAAM2C,UAAUpE,YAC7B4C,WAAYnB,EAAM2C,UAAUxB,WAC5BC,oBAAoBpB,EAAM2C,UAAUvB,uBAMpC,CACIsI,epB5BkB,SAACnL,GAAD,MAA0B,CAACiB,KAAM,mBAAoBjB,gBoB4BxDgL,SpBhBH,SAAChL,EAAqBC,GAC1C,OAAO,SAAC+I,GACJA,EAASlG,GAAiB,IAC1B/C,EAAkBC,EAAaC,GAC1Bd,MAAK,SAAAiM,GACFpC,EAASlG,GAAiB,IAC1BkG,EAnBgC,CAAC/H,KAAM,YAAayB,MAmBlC0I,EAAS7G,KAAK8G,QAChCrC,EAlBgD,CAC5D/H,KAAM,wBACNwC,MAgBwC2H,EAAS7G,KAAK+G,kBoBStBlC,OpBLd,SAACjJ,GACnB,OAAO,SAAC6I,GACJA,EAASjG,GAAwB,EAAM5C,IACvCJ,EAAgBI,GACXhB,MAAK,SAAAiM,GAC+B,IAA7BA,EAAS7G,KAAKgH,YACdvC,EAhCS,SAAC7I,GAAD,MAAqB,CAACc,KAAM,SAAUd,UAgCtCqL,CAAcrL,IAE3B6I,EAASjG,GAAwB,EAAO5C,SoBHbkJ,SpBOnB,SAAClJ,GACrB,OAAO,SAAC6I,GACJA,EAASjG,GAAwB,EAAM5C,IACvCJ,EAAkBI,GACbhB,MAAK,SAAAiM,GAC+B,IAA7BA,EAAS7G,KAAKgH,YACdvC,EA3CW,SAAC7I,GAAD,MAAqB,CAACc,KAAM,WAAYd,UA2C1CsL,CAAgBtL,IAE7B6I,EAASjG,GAAwB,EAAO5C,WoBbpDwI,GALWI,CAMb+B,I,0CCTaY,GAzDf,+MACIjK,MAAQ,CACJb,OAAQ,EAAKqF,MAAMrF,OACnB+K,UAAU,GAHlB,EAaIC,cAAgB,WACZ,EAAKC,SAAL,2BAAkB,EAAKpK,OAAvB,IAA8BkK,UAAU,MAdhD,EAgBIG,OAAS,SAACC,GACN,EAAKF,SAAL,2BAAkB,EAAKpK,OAAvB,IAA8BkK,UAAU,KACxC,EAAK1F,MAAM+F,aAAaD,EAAEE,cAAc7E,QAlBhD,EAoBI8E,SAAW,SAACH,GACR,EAAKF,SAAL,2BAAkB,EAAKpK,OAAvB,IAA8Bb,OAAQmL,EAAEE,cAAc7E,UArB9D,EAwBI+E,QAAU,SAACJ,GACO,UAAVA,EAAEK,MACF,EAAKP,SAAL,2BAAkB,EAAKpK,OAAvB,IAA8BkK,UAAU,EAAMvE,MAAO2E,EAAEE,cAAc7E,SACrE,EAAKnB,MAAM+F,aAAaD,EAAEE,cAAc7E,SA3BpD,yDAKI,SAAmBiF,EAAgCC,GAC5CD,EAAUzL,SAAWqK,KAAKhF,MAAMrF,QAC/BqK,KAAKY,SAAS,CACVjL,OAAOqK,KAAKhF,MAAMrF,WARlC,oBA+BI,WAEI,OACI,8BACKqK,KAAKxJ,MAAMkK,SACN,sBACEC,cAAeX,KAAKW,cACpBW,aAActB,KAAKW,cAFrB,SAEsCX,KAAKhF,MAAMrF,OAAiBqK,KAAKhF,MAAMrF,OAAnB,QAC1D,uBACEK,KAAK,OACL6K,OAAQb,KAAKa,OACb1E,MAAO6D,KAAKxJ,MAAMb,OAClB4L,WAAS,EACTN,SAAUjB,KAAKiB,SACfO,WAAYxB,KAAKkB,gBA7CzC,GAAmCjB,IAAMtC,WC6B1B8D,GA9B2B,SAAC,GAAqC,IAApCnL,EAAmC,EAAnCA,QAASX,EAA0B,EAA1BA,OAAQoL,EAAkB,EAAlBA,aACzD,OAAKzK,EAIG,8BACI,sBAAKyD,UAAWC,KAAQ0H,QAAxB,UACI,qBAAKvG,IAAK7E,EAAQ6I,OAAOC,MAAQ9I,EAAQ6I,OAAOC,MAAQC,GAAkBjE,IAAI,KAE9E,cAAC,GAAD,CAAezF,OAAQA,EAAQoL,aAAcA,IAE7C,oCAAOzK,EAAQqL,SAAf,OACA,oCAAOrL,EAAQsL,QAAf,OACA,+BACI,6BAAKtL,EAAQuL,SAASC,SAAjB,oBAAyCxL,EAAQuL,SAASC,UAAW,KAC1E,6BAAKxL,EAAQuL,SAASE,UACtB,6BAAKzL,EAAQuL,SAASG,KACtB,6BAAK1L,EAAQuL,SAASI,UACtB,6BAAK3L,EAAQuL,SAASK,YACtB,6BAAK5L,EAAQuL,SAASM,UACtB,6BAAK7L,EAAQuL,SAASO,SACtB,6BAAK9L,EAAQuL,SAASQ,cAE1B,8BAAM/L,EAAQgM,iCArBnB,cAAC,GAAD,K,wCCYAC,GAfmB,SAACvH,GAC/B,OACI,sBAAKjB,UAAWC,KAAQ7E,KAAxB,UACQ,qBAAK4E,UAAWC,KAAQwI,OACnBrH,IAAI,kFAAkFC,IAAI,OACnG,qBAAKrB,UAAWC,KAAQ5D,QAAxB,SACK4E,EAAM5E,UAGX,sBAAK2D,UAAWC,KAAQyI,KAAxB,UACI,uCACCzH,EAAM3E,iBCTjBqM,GAAoBrG,GAAiB,ICkB9BI,GAAmBC,aAA2D,CACvFnD,KAAM,yBADsBmD,EDjBgE,SAAC1B,GAC7F,OACI,uBAAM2B,SAAU3B,EAAM4B,aAAtB,UACI,cAACC,GAAA,EAAD,CAAO9C,UAAWC,KAAQ2I,eACnB5F,UAAWtB,GACXxE,KAAM,cACN6F,YAAa,gBACbE,SAAU,CAACd,GAASwG,MAE3B,wBAAQ3I,UAAWC,KAAQ4I,cAA3B,mCCWGC,GAvB4B,SAAC7H,GACxC,IAGI8H,EAAe9H,EAAM9E,MAAM+B,KAAI,SAAA2G,GAAC,OAAI,cAAC,GAAD,CAAMzI,GAAIyI,EAAEzI,GAAIC,QAASwI,EAAExI,QAASC,UAAWuI,EAAEvI,WAAgBuI,EAAEzI,OAE3G,OACI,sBAAK4D,UAAWC,KAAQ9D,MAAxB,UACI,sBAAK6D,UAAWC,KAAQ+I,WAAxB,UACI,qBAAKhJ,UAAWC,KAAQgJ,gBAAxB,sBACA,cAAC,GAAD,CAAkBrG,SATb,SAACY,GACdvC,EAAMiI,QAAQ1F,EAAO3G,mBAUhBkM,MCSEI,GADUtF,cAZD,SAACpH,GACrB,MAAO,CACHN,MAAOM,EAAMyC,YAAY/C,UAGR,SAAC6H,GACtB,MAAO,CACHkF,QAAS,SAACrM,GACNmH,E9BUwB,SAACnH,GAAD,MAAyB,CAACZ,KAAM,WAAWY,e8BV1DuM,CAAqBvM,QAIjBgH,CAA2CiF,ICLrDO,GAR4B,SAAC,GAAsC,IAAnC9M,EAAkC,EAAlCA,QAASX,EAAyB,EAAzBA,OAAQoL,EAAiB,EAAjBA,aAC5D,OACI,sBAAKhH,UAAWC,KAAQ1D,QAAxB,UACI,cAAC,GAAD,CAAaA,QAASA,EAASX,OAAQA,EAAQoL,aAAcA,IAC7D,cAAC,GAAD,QCMNsC,G,2KACF,WACI,IAAInO,EAAS8K,KAAKhF,MAAMsI,MAAMC,OAAOrO,OAChCA,IACDA,EAAS,SAEb8K,KAAKhF,MAAMwI,eAAetO,GAC1B8K,KAAKhF,MAAMvF,cAAcP,K,oBAG7B,WACI,OACI,8BACI,cAAC,GAAD,2BAAc8K,KAAKhF,OAAnB,IACU1E,QAAS0J,KAAKhF,MAAM1E,QACpBX,OAAQqK,KAAKhF,MAAMrF,OACnBoL,aAAcf,KAAKhF,MAAMtF,0B,GAhBpBuK,IAAMtC,WA+BtBG,qBACXF,cAToB,SAACpH,GAAD,MAA6C,CACjEF,QAASE,EAAMyC,YAAY3C,QAC3BX,OAAQa,EAAMyC,YAAYtD,UAQL,CACb6N,ehCpBkB,SAACtO,GAC3B,OAAO,SAAC6I,GACJjJ,EAAwBI,GACnBhB,MAAK,SAAAiM,GACFpC,EAPuD,CAAC/H,KAAM,oBAAqBM,QAOnD6J,EAAS7G,YgCgB7B5D,iBhCHI,SAACC,GAC7B,OAAO,SAACoI,GACJxI,EAAWG,iBAAiBC,GACvBzB,MAAK,SAAAiM,GAC+B,IAA7BA,EAAS7G,KAAKgH,YACdvC,EAAShI,EAAcJ,SgCFGF,chCXjB,SAACP,GAC1B,OAAO,SAAC6I,GACJxI,EAAWE,cAAcP,GACpBhB,MAAK,SAAAiM,GACFpC,EAAShI,EAAcoK,EAAS7G,cgCS5CmK,IALW3F,CAMbuF,I,oBCpCaK,GAnB8B,SAAA1I,GAAU,IAE/CnC,EAEAmC,EAFAnC,MACAC,EACAkC,EADAlC,OAEJ,OACI,yBAAQiB,UAAWC,KAAQ2J,OAA3B,UACI,qBAAKxI,IAAI,wEAAwEC,IAAI,iBACrF,qBAAKrB,UAAWC,KAAQ4J,WAAxB,SACK9K,EACKD,EACA,cAAC,IAAD,UACE,cAAC,IAAD,CAASsB,GAAG,SAAZ,2BCHlB0J,G,2KACF,WACG7D,KAAKhF,MAAM8I,oB,oBAGd,WACI,OACI,cAAC,GAAD,eAAY9D,KAAKhF,Y,GAPCiF,IAAMtC,WAgBrBC,iBAJS,SAACpH,GAAD,MAA6C,CACjEsC,OAAQtC,EAAM4C,KAAKN,OACnBD,MAAOrC,EAAM4C,KAAKP,SAEiB,CAACiL,gB7BZT,WAC3B,OAAO,SAAC/F,GACJlI,IACK3B,MAAK,SAAAiM,GACF,GAAiC,IAA7BA,EAAS7G,KAAKgH,WAAkB,CAAC,IAAD,EACFH,EAAS7G,KAAKA,KAAtCpE,EAD0B,EAC1BA,OAAQ0D,EADkB,EAClBA,MAAOC,EADW,EACXA,MACrBkF,EATO,SAAC7I,EAAc0D,EAAaC,GAA5B,MAA8C,CACrE7C,KAAK,gBAAgBsD,KAAK,CAACpE,SAAO0D,QAAMC,UAQfkL,CAAY7O,EAAQ0D,EAAOC,W6BMzC+E,CAA4CiG,ICL9CG,GAAiBtH,aAAwB,CAClDnD,KAAK,SADqBmD,EAf+B,SAAC1B,GAC1D,OACI,uBAAM2B,SAAU3B,EAAM4B,aAAtB,UACI,cAACC,GAAA,EAAD,CAAQC,YAAa,QAASC,UAAWd,GAAOhF,KAAM,QAAS+F,SAAU,CAACd,MAC1E,cAACW,GAAA,EAAD,CAAQC,YAAa,WAAYC,UAAWd,GAAOhF,KAAM,WAAY+F,SAAU,CAACd,MAChF,sBAAK8C,MAAO,CAACiF,QAAQ,OAAOC,WAAW,UAAvC,UACI,cAACrH,GAAA,EAAD,CAAO7G,KAAK,WAAW+G,UAAW,QAAS9F,KAAM,eACjD,uBAAOkN,QAAQ,iBAAf,4BAGJ,iD,oBCjBCC,GAAY,WAErB,OACI,qBAAKrK,UAAWC,KAAQqK,UAAxB,SAEI,qBAAKtK,UAAWC,KAAQsK,UAAxB,SACI,cAACN,GAAD,SC0BDO,GAvBO,WAClB,OACQ,sBAAKxK,UAAU,MAAf,UACI,cAAC,GAAD,IACA,cAAC,EAAD,IACA,sBAAKA,UAAU,sBAAf,UACI,cAAC,IAAD,CAAOkB,KAAK,oBACLuJ,OAAQ,kBAAM,cAAC,GAAD,OACrB,cAAC,IAAD,CAAOvJ,KAAK,WACLuJ,OAAQ,kBAAM,cAACC,GAAD,OACrB,cAAC,IAAD,CAAOxJ,KAAK,SACLuJ,OAAQ,kBAAM,cAAC,GAAD,OACrB,cAAC,IAAD,CAAOvJ,KAAK,SACLuJ,OAAQ,kBAAM,cAAC,GAAD,OACrB,cAAC,IAAD,CAAOvJ,KAAK,QAAQ8B,UAAWrC,IAC/B,cAAC,IAAD,CAAOO,KAAK,SAAS8B,UAAWlC,IAChC,cAAC,IAAD,CAAOI,KAAK,YAAY8B,UAAWjC,OAEvC,cAAC,EAAD,QCpBZ4J,IAASF,OACL,cAAC,IAAMG,WAAP,UACI,cAAC,IAAD,UACI,cAAC,KAAD,CAAUlL,MAAOA,EAAjB,SACI,cAAC,GAAD,UAGQmL,SAASC,eAAe,SAIpD9Q,K,mBCrBAH,EAAOC,QAAU,CAAC,KAAO,yBAAyB,OAAS,2BAA2B,eAAiB,mCAAmC,OAAS,2BAA2B,aAAe,iCAAiC,WAAa,iC,mBCA3OD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,cAAgB,+BAA+B,YAAc,6BAA6B,SAAW,0BAA0B,QAAU,2B,mBCA9LD,EAAOC,QAAU,CAAC,MAAQ,uBAAuB,WAAa,4BAA4B,gBAAkB,iCAAiC,eAAiB,gCAAgC,cAAgB,iC,mBCA9MD,EAAOC,QAAU,CAAC,KAAO,oBAAoB,MAAQ,qBAAqB,OAAS,sBAAsB,KAAO,oBAAoB,OAAS,sBAAsB,QAAU,uBAAuB,KAAO,oBAAoB,SAAW,0B,mBCA1OD,EAAOC,QAAU,CAAC,YAAc,kCAAkC,MAAQ,8B,mBCA1ED,EAAOC,QAAU,CAAC,KAAO,mBAAmB,OAAS,qBAAqB,QAAU,sBAAsB,KAAO,qB,mBCAjHD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,UAAY,0B,mBCAxDD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,WAAa,6B,mBCA/DD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,UAAY,gC","file":"static/js/main.462a334f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1RChf\",\"item\":\"Navbar_item__Qin6T\",\"active\":\"Navbar_active__Siz7Z\",\"grid\":\"Navbar_grid__2OMsl\",\"friendName\":\"Navbar_friendName__VOdSD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__29X5M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ProfileInfo_content__3sl4Z\"};","import {postType} from \"./store\";\nimport {AllActionTypes} from './redux-store'\nimport {Dispatch} from \"redux\";\nimport {profileAPI, usersAPI} from \"../dal/api\";\n\nexport enum PROFILE_ACTIONS_TYPE {\n    ADD_POST = 'ADD_POST',\n    SET_USERS_PROFILE = 'SET_USERS_PROFILE',\n    SET_STATUS = 'SET_STATUS',\n}\n\nexport type ProfileServerType = {\n    aboutMe: string | null\n    contacts: {\n        facebook: string | null\n        website: string | null\n        vk: string | null\n        twitter: string | null\n        instagram: string | null\n        youtube: string | null\n        github: string | null\n        mainLink: string | null\n    }\n    lookingForAJob: boolean,\n    lookingForAJobDescription: string | null\n    fullName: string\n    userId: number\n    photos: {\n        small: string | null,\n        large: string | null\n    }\n}\n\nexport const addPostActionCreator = (newPostText:string) => ({type: 'ADD_POST',newPostText} as const)\n\nexport const setUsersProfileSuccess = (profile: ProfileServerType) => ({type: 'SET_USERS_PROFILE', profile} as const)\nexport const setUserStatus = (status: string) => ({type: 'SET_STATUS', status} as const)\n\nexport const setUserProfile = (userId: string) => {\n    return (dispatch: Dispatch) => {\n        usersAPI.getProfileUser(userId)\n            .then(response => {\n                dispatch(setUsersProfileSuccess(response.data))\n            })\n    }\n}\n\nexport const getUserStatus = (userId: string) => {\n    return (dispatch: Dispatch) => {\n        profileAPI.getUserStatus(userId)\n            .then(response => {\n                dispatch(setUserStatus(response.data))\n            })\n    }\n}\nexport const updateUserStatus = (status: string) => {\n    return (dispatch: Dispatch) => {\n        profileAPI.updateUserStatus(status)\n            .then(response => {\n                if (response.data.resultCode === 0) {\n                    dispatch(setUserStatus(status))\n                }\n            })\n    }\n}\n\nexport type ProfileInitialStateType = typeof initialState\nlet initialState = {\n    posts: [\n        {id: 1, message: 'Hello bro', likeCount: 0},\n    ] as Array<postType>,\n    profile: null as null | ProfileServerType,\n    status: ''\n}\nconst profileReducer = (state: ProfileInitialStateType = initialState, action: AllActionTypes): ProfileInitialStateType => {\n    switch (action.type) {\n        case PROFILE_ACTIONS_TYPE.ADD_POST : {\n            let newPost: postType = {\n                id: 5,\n                message: action.newPostText,\n                likeCount: 0\n            }\n            if (action.newPostText !== '') {\n                return {\n                    ...state,\n                    posts: [...state.posts, newPost],\n                }\n            }\n            return state\n        }\n        case PROFILE_ACTIONS_TYPE.SET_USERS_PROFILE : {\n            return {\n                ...state,\n                profile: action.profile\n            }\n        }\n        case PROFILE_ACTIONS_TYPE.SET_STATUS : {\n            return {\n                ...state, status: action.status\n            }\n        }\n        default :\n            return state\n    }\n}\nexport default profileReducer\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from \"axios\";\n\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    headers: {\n        'API-KEY': '65933dcc-6afe-43bc-af50-63aed10a4c85'\n    }\n})\nexport const usersAPI = {\n    getUsers(currentPage: number = 1, pageSize: number = 10) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\n    },\n    follow(userId: number) {\n        return instance.post(`follow/${userId}`)\n    },\n    unfollow(userId: number) {\n        return instance.delete(`follow/${userId}`)\n    },\n\n    getProfileUser(userId: string) {\n        console.log('Please use profileAPI ti get users.')\n        return profileAPI.getUserProfile(userId)\n    }\n\n}\nexport const profileAPI = {\n    getUserProfile(userId: string) {\n        return instance.get(`profile/${userId}`)\n    },\n    getUserStatus(userId: string) {\n        return instance.get(`profile/status/${userId}`)\n    },\n    updateUserStatus(status: string) {\n        return instance.put(`profile/status`, {\n            status: status\n        })\n    }\n\n}\nexport const authAPI = {\n    authMe() {\n        return instance.get(`auth/me`)\n    },\n}\n\n","import {AllActionTypes} from \"./redux-store\";\nexport enum DIALOGS_ACTIONS_TYPE{\n    SEND_MESSAGE = 'SEND_MESSAGE',\n    UPDATE_NEW_MESSAGE_BODY='UPDATE_NEW_MESSAGE_BODY',\n}\n\nexport type dialogType = { id: number, name: string, img: string }\nexport type messageType = { id: number, message: string }\nexport type DialogsPageStateType = typeof initialState\nlet initialState = {\n    dialogs: [\n        {\n            id: 1,\n            name: \"Archi\",\n            img: 'https://cs4.pikabu.ru/post_img/big/2015/03/10/5/1425968564_1301750843.jpg'\n        },\n        {\n            id: 2,\n            name: \"Dimich\",\n            img: 'http://rasfokus.ru/images/photos/medium/71e226a2972b39c54360dfec99765e66.jpg'\n        },\n        {\n            id: 3,\n            name: \"The_Kot\",\n            img: 'https://i1.u-mama.ru/111/87b/b3d/3f034929b4556f4a747ca0fd40c29f08.jpg'\n        },\n    ] as dialogType[],\n    messages: [\n        {id: 1, message: 'Hihihihih'},\n        {id: 2, message: 'How is your s ds'},\n        {id: 3, message: 'Hihihihih'},\n    ] as messageType[],\n}\nconst dialogsReducer = (state: DialogsPageStateType = initialState, action: AllActionTypes): DialogsPageStateType => {\n\n    switch (action.type) {\n        case DIALOGS_ACTIONS_TYPE.SEND_MESSAGE:\n            let newMessage: messageType = {id: 6, message: action.messageText}\n            if (action.messageText !== '') {\n                return {\n                    ...state,\n                    messages: [...state.messages, newMessage]\n                }\n            }\n            return state\n\n        default :\n            return state\n    }\n}\nexport const sendMessageCreator = (messageText:string) => ({type: 'SEND_MESSAGE',messageText}as const )\n\nexport default dialogsReducer","import {AllActionTypes} from \"./redux-store\"\nimport {Dispatch} from \"redux\";\nimport {usersAPI} from \"../dal/api\";\n\nexport enum USERS_ACTIONS_TYPE {\n    FOLLOW = 'FOLLOW',\n    UNFOLLOW = 'UNFOLLOW',\n    SET_USERS = 'SET_USERS',\n    SET_CURRENT_PAGE = 'SET_CURRENT_PAGE',\n    SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT',\n    TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING',\n    TOGGLE_IS_FETCHING_PROGRESS = 'TOGGLE_IS_FETCHING_PROGRESS'\n}\n\nexport type userType = {\n    id: number\n    name: string\n    status: string\n    photos: {\n        small?: string\n        large?: string\n    }\n    followed: boolean\n}\n\nexport type serverUsers = {\n    users: userType[]\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n}\n\ntype InitialStateType = typeof initialState\nlet initialState = {\n    users: [] as userType[],\n    pageSize: 20,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: true,\n    followingInProgress: [] as number[]\n}\nexport const followSuccess = (userId: number) => ({type: 'FOLLOW', userId}) as const\nexport const unFollowSuccess = (userId: number) => ({type: 'UNFOLLOW', userId}) as const\nexport const setUsers = (users: userType[]) => ({type: 'SET_USERS', users}) as const\nexport const setCurrentPage = (currentPage: number) => ({type: 'SET_CURRENT_PAGE', currentPage}) as const\nexport const setTotalUsersCount = (totalUsersCount: number) => ({\n    type: 'SET_TOTAL_USERS_COUNT',\n    count: totalUsersCount\n}) as const\nexport const toggleIsFetching = (isFetching: boolean) => ({type: 'TOGGLE_IS_FETCHING', isFetching: isFetching}) as const\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number) => ({\n    type: 'TOGGLE_IS_FETCHING_PROGRESS',\n    isFetching,\n    userId\n}) as const\n\nexport const getUsers = (currentPage: number, pageSize: number) => {\n    return (dispatch: Dispatch) => {\n        dispatch(toggleIsFetching(true))\n        usersAPI.getUsers(currentPage, pageSize)\n            .then(response => {\n                dispatch(toggleIsFetching(false))\n                dispatch(setUsers(response.data.items))\n                dispatch(setTotalUsersCount(response.data.totalCount))\n        })\n    }\n}\nexport const follow = (userId: number) => {\n    return (dispatch: Dispatch) => {\n        dispatch(toggleFollowingProgress(true, userId))\n        usersAPI.follow(userId)\n            .then(response => {\n                if (response.data.resultCode === 0) {\n                    dispatch(followSuccess(userId))\n                }\n                dispatch(toggleFollowingProgress(false, userId))\n            })\n    }\n}\nexport const unfollow = (userId: number) => {\n    return (dispatch: Dispatch) => {\n        dispatch(toggleFollowingProgress(true, userId))\n        usersAPI.unfollow(userId)\n            .then(response => {\n                if (response.data.resultCode === 0) {\n                    dispatch(unFollowSuccess(userId))\n                }\n                dispatch(toggleFollowingProgress(false, userId))\n            })\n    }\n}\n\n\n\nexport const usersReducer = (state: InitialStateType = initialState, action: AllActionTypes): InitialStateType => {\n    switch (action.type) {\n        case USERS_ACTIONS_TYPE.FOLLOW :\n            return {\n                ...state,\n                users: state.users.map(user => {\n                    if (user.id === action.userId) {\n                        return {...user, followed: true}\n                    }\n                    return user\n                })\n            }\n        case USERS_ACTIONS_TYPE.UNFOLLOW:\n            return {\n                ...state,\n                users: state.users.map(user => {\n                    if (user.id === action.userId) {\n                        return {...user, followed: false}\n                    }\n                    return user\n                })\n            }\n        case USERS_ACTIONS_TYPE.SET_USERS : {\n            return {...state, users: action.users}\n        }\n        case  USERS_ACTIONS_TYPE.SET_CURRENT_PAGE: {\n            return {...state, currentPage: action.currentPage}\n        }\n        case USERS_ACTIONS_TYPE.SET_TOTAL_USERS_COUNT : {\n            return {...state, totalUsersCount: action.count}\n        }\n        case USERS_ACTIONS_TYPE.TOGGLE_IS_FETCHING : {\n            return {...state, isFetching: action.isFetching}\n        }\n        case USERS_ACTIONS_TYPE.TOGGLE_IS_FETCHING_PROGRESS: {\n            return {\n                ...state,\n                followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter(id => id !== action.userId)\n            }\n        }\n        default :\n            return state\n    }\n}\n\n// export const getUsersThunkCreator = (currentPage:number,pageSize:number) => {\n//     return  (dispatch:Dispatch) => {\n//         dispatch(toggleIsFetching(true))\n//         usersAPI.getUsers(currentPage,pageSize).then(data => {\n//             dispatch(toggleIsFetching(false))\n//             dispatch(setUsers(data.items))\n//             dispatch(setTotalUsersCount(data.totalCount))\n//         })\n// }\n// }\n\nexport default usersReducer","import {AllActionTypes} from \"./redux-store\";\nimport {Dispatch} from \"redux\";\nimport {authAPI} from \"../dal/api\";\n\nexport enum AUTH_ACTIONS_TYPE {\n    SET_USER_DATA = 'SET_USER_DATA' ,\n}\n\n\ntype initialStateType = typeof initialState\nlet initialState = {\n    userId: null as null | number,\n    email: null as null | string,\n    login: null as null | string,\n    isAuth: false\n}\nexport const setUserData = (userId:number,email:string,login:string) => ({\n    type:'SET_USER_DATA',data:{userId,email,login}} as const )\n\nexport const getAuthUserData = () => {\n    return (dispatch:Dispatch) => {\n        authAPI.authMe()\n            .then(response => {\n                if (response.data.resultCode === 0) {\n                     let {userId, email, login} = response.data.data\n                    dispatch(setUserData(userId, email, login))\n                }\n            })\n    }\n}\n\n\nexport const authReducer = (state:initialStateType = initialState,action:AllActionTypes):initialStateType => {\n     switch (action.type) {\n         case AUTH_ACTIONS_TYPE.SET_USER_DATA: {\n             return {\n                 ...state,\n                 ...action.data,\n                 isAuth: true\n             }\n         }\n         default: return state\n     }\n}\n\n","import {applyMiddleware, combineReducers} from \"redux\";\nimport {createStore} from \"redux\";\nimport profileReducer, {\n    addPostActionCreator,\n    setUsersProfileSuccess,\n    setUserStatus,\n} from \"./profile-reducer\";\nimport dialogsReducer, {sendMessageCreator} from \"./dialogs-reducer\";\nimport usersReducer, {\n    followSuccess,\n    setCurrentPage,\n    setTotalUsersCount,\n    setUsers, toggleFollowingProgress,\n    toggleIsFetching,\n    unFollowSuccess,\n} from \"./users-reducer\";\nimport {authReducer, setUserData} from \"./auth-reducer\";\nimport thunkMiddleware from 'redux-thunk'\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { reducer as formReducer } from 'redux-form'\n\nexport type AllActionTypes =\n    ReturnType<typeof addPostActionCreator>\n    |ReturnType<typeof sendMessageCreator>\n    | ReturnType<typeof followSuccess>\n    | ReturnType<typeof unFollowSuccess>\n    | ReturnType<typeof setUsers>\n    | ReturnType<typeof setCurrentPage>\n    | ReturnType<typeof setTotalUsersCount>\n    | ReturnType<typeof toggleIsFetching>\n    | ReturnType<typeof setUsersProfileSuccess>\n    | ReturnType<typeof toggleFollowingProgress>\n    | ReturnType<typeof setUserData>\n    | ReturnType<typeof setUserStatus>\n\n\nlet rootReducer = combineReducers({\n    profilePage: profileReducer,\n    dialogsPage: dialogsReducer,\n    usersPage : usersReducer,\n    auth:authReducer,\n    form: formReducer\n})\n\nexport type AppStateType = ReturnType<typeof rootReducer>\nlet store = createStore(\n    rootReducer, composeWithDevTools(\n        applyMiddleware(thunkMiddleware)\n    )\n\n)\n\n// (window as any).__REDUX_DEVTOOLS_EXTENSION__ && (window as any).__REDUX_DEVTOOLS_EXTENSION__()\nexport default store","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport classes from \"./Navbar.module.css\"\n\n\n\nconst Navbar = () => {\n    // let sidebarMap = props.store.getState().navbarPage.friends.map(f => <Friends id={f.id} name={f.name} img={f.img}/>)\n    return (\n        <nav className={classes.nav}>\n            <div className={classes.item}>\n                <NavLink to='/profile'\n                         activeClassName={classes.active}>Profile</NavLink>\n            </div>\n            <div className={classes.item}>\n                <NavLink to='/users'\n                         activeClassName={classes.active}>Users</NavLink>\n            </div>\n            <div className={`${classes.item} ${classes.active}`}>\n                <NavLink to='/dialogs'\n                         activeClassName={classes.active}> Dialogs</NavLink>\n            </div>\n            <div className={classes.item}>\n                <NavLink to='/news'\n                         activeClassName={classes.active}>News</NavLink>\n            </div>\n            <div className={classes.item}>\n                <NavLink to='/music'\n                         activeClassName={classes.active}>Music</NavLink>\n            </div>\n            <div className={classes.item}>\n                <NavLink to='/settings'\n                         activeClassName={classes.active}>Settings</NavLink>\n            </div>\n            <div >\n                <NavLink to='/friends' className={classes.friendName}>Friends</NavLink>\n                <div className={classes.grid}>{/*{sidebarMap}*/} </div>\n            </div>\n        </nav>\n    )\n}\nexport default Navbar","import React from \"react\";\nimport classes from \"./Footer.module.css\"\nconst Footer = ()=> {\n    return (\n        <footer className={classes.footer}>\n            footer\n        </footer>\n    )\n}\nexport default Footer","import React from 'react'\nimport classes from './News.module.css';\n\nconst News = () => {\n    return  (\n        <div >\n            <div className={classes.news}>\n                <div className={classes.newsTitle}>News</div>\n            </div>\n        </div>\n    )\n}\nexport default News","import React from 'react'\n\nconst Music = () => {\n    return  (\n        <div>\n            Music\n        </div>\n    )\n}\nexport default Music","import React from 'react'\n\nconst Settings = () => {\n    return  (\n        <div>\n            Settings\n        </div>\n    )\n}\nexport default Settings","import React from 'react'\nimport {NavLink} from 'react-router-dom';\n\n\nimport classes from \"./DialogItem.module.css\";\n\ntype DialogItemType = {\n    id:number\n    img:string\n    name:string\n}\nconst DialogItem: React.FC<DialogItemType> = (props) => {\n    let path = '/dialogs/' + props.id\n    return (\n        <div className={`${classes.dialog} ${classes.active} ${classes.grid}`} >\n            <NavLink to={path} ><img src={props.img} alt=\"aa\" className={classes.dialogAvatar}/></NavLink>\n            <div className={classes.dialogText}>some text</div>\n            <NavLink to={path} activeClassName={classes.active}  className={classes.dialogUsername}>{props.name}</NavLink>\n        </div>\n    )\n}\n\nexport default DialogItem","import React from 'react'\nimport classes from '../Dialogs.module.css';\n\n\ntype messageType = {\n    id:number\n    message:string|undefined\n}\n\nconst Message : React.FC<messageType>= (props) => {\n    return (\n        <div className={classes.message} >{props.message}</div>\n    )\n}\n\nexport default Message","import React, {FC} from 'react'\nimport { WrappedFieldProps } from 'redux-form'\nimport styles from './FormsControl.module.css'\n\ninterface CustomFieldProps {\n    type?: string;\n}\n\n\nexport const Textarea:FC<WrappedFieldProps & CustomFieldProps > = ({input,meta,...props}) => {\n    const hasError = meta.touched && meta.error\n\n    return (\n        <div className={`${styles.formControl} + ${hasError ? styles.error : \"\"} `}>\n            <div>\n                <textarea {...input} {...props}/>\n            </div>\n            {hasError && <span>{meta.error}</span>}\n        </div>\n    )\n}\nexport const Input:FC<WrappedFieldProps & CustomFieldProps > = ({input,meta,...props}) => {\n    const hasError = meta.touched && meta.error\n\n    return (\n        <div className={`${styles.formControl} + ${hasError ? styles.error : \"\"} `}>\n            <div>\n                <input {...input} {...props}/>\n            </div>\n            {hasError && <span>{meta.error}</span>}\n        </div>\n    )\n}","\n\nexport const required = (value:string) => {\n  return   value? undefined : 'field is req'\n}\n\nexport const maxLengthCreator = (symbalLength:number) => {\n    return (value: string) => {\n        if (value.length > symbalLength) {\n            return `max length is ${symbalLength} symbols`\n        } else {\n            return undefined\n        }\n    }\n}\n","import React, {FC} from 'react'\nimport {Field, InjectedFormProps} from \"redux-form\";\nimport {sendMessageExtendsFormDataType, sendMessageFormDataType} from \"./Dialogs\";\nimport {Textarea} from \"../../components/common/formsControl/FormsControl\";\nimport {maxLengthCreator, required} from \"../../utils/validate/validators\";\n\nconst maxLengthCreator100 =maxLengthCreator(100)\nexport const SendMessage: FC<InjectedFormProps<sendMessageFormDataType> & sendMessageExtendsFormDataType>= (props) => {\n\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <Field\n                placeholder={'create post'}\n                component={Textarea}\n                name={'sendNewMessage'}\n                validate={[required,maxLengthCreator100]}\n            > </Field>\n            <button >send</button>\n        </form>\n    )\n}\n","import React from 'react'\nimport classes from \"./Dialogs.module.css\";\nimport DialogItem from \"./DialogItem/DialogsItem\";\nimport Message from \"./Message/Message\";\nimport {DialogsPropsType} from \"./DialogsContainer\";\nimport { reduxForm} from \"redux-form\";\nimport { SendMessage } from './SendMessage';\n\nconst Dialogs: React.FC<DialogsPropsType> = ({dialogsPage, sendMessage}) => {\n    let dialogsElements = dialogsPage.dialogs\n        .map(dialog => <DialogItem key={dialog.id} name={dialog.name} id={dialog.id} img={dialog.img}/>)\n    let messagesElements = dialogsPage.messages\n        .map(message => <Message key={message.id} message={message.message} id={message.id}/>)\n\n    const addNewMessage = (values:sendMessageFormDataType) => {\n        sendMessage(values.sendNewMessage)\n    }\n\n    return (\n        <div className={classes.dialogs}>\n            <h2 className={classes.dialogsHeader}> Dialogs</h2>\n            <div className={classes.dialogItems}>\n                {dialogsElements}\n            </div>\n            <div className={classes.messages}>\n                <div>{messagesElements}</div>\n                <DialogsReduxForm onSubmit={addNewMessage}/>\n            </div>\n        </div>\n    )\n}\nexport type sendMessageFormDataType = {\n    sendNewMessage: string\n}\nexport type sendMessageExtendsFormDataType = {}\n\nexport const DialogsReduxForm = reduxForm<sendMessageFormDataType, sendMessageExtendsFormDataType>({\n    form: 'dialogsAddMessageForm'\n})(SendMessage)\nexport default Dialogs","import React, {ComponentType} from 'react'\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {AppStateType} from \"../redux/redux-store\";\n\ntype mapStateToProps = {\n    isAuth:boolean\n}\n\nconst mstp = (state:AppStateType) : mapStateToProps => {\n    return {\n        isAuth:state.auth.isAuth\n    }\n}\n\nexport function WithAuthRedirect <T>(Component:ComponentType<T>)  {\n    const RedirectComponent = (props:mapStateToProps) => {\n        let {isAuth,...rest} = props\n        if (!props.isAuth){\n            return <Redirect to={'/login'}/>\n        }\n        return <Component {...rest as T}/>\n    }\n    let ConnectedRedirectComponent = connect(mstp)(RedirectComponent)\n\n    return ConnectedRedirectComponent\n}","import {DialogsPageStateType, sendMessageCreator} from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {compose, Dispatch} from 'redux';\nimport {WithAuthRedirect} from \"../../Hoc/withAuthRedirect\";\n\ntype MapStatePropsType = {\n    dialogsPage: DialogsPageStateType\n}\ntype MapDispatchToProps = {\n    sendMessage: (messageText:string) => void\n}\nexport type DialogsPropsType = MapStatePropsType & MapDispatchToProps\n\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\n    return {\n        dialogsPage: state.dialogsPage,\n    }\n}\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchToProps => {\n    return {\n        sendMessage: (messageText:string) => {\n            dispatch(sendMessageCreator(messageText))\n        },\n    }\n}\n\n\nexport default compose<React.ComponentType>(\n    connect(mapStateToProps, mapDispatchToProps),\n    WithAuthRedirect\n)(Dialogs)","export default __webpack_public_path__ + \"static/media/icons8-user-male.be2cd3f6.svg\";","import s from \"./users.module.css\";\nimport userWithoutPhoto from \"../../assets/imagies/icons8-user-male.svg\";\nimport React, {FC} from \"react\";\nimport {userType} from \"../../redux/users-reducer\";\nimport {NavLink} from \"react-router-dom\";\n\ntype usersPropsType = {\n    totalUsersCount: number\n    currentPage: number\n    onPageChanged: (pageNumber: number) => void\n    users: userType[]\n    pageSize: number\n    followingInProgress: number[]\n    follow: (userId: number) => void\n    unfollow: (userId: number) => void\n}\nexport const Users: FC<usersPropsType> = props => {\n    debugger\n    const {\n        users,\n        currentPage,\n        pageSize,\n        totalUsersCount,\n        onPageChanged,\n        followingInProgress,\n        follow,\n        unfollow,\n    } = props\n\n    let pagesCount = Math.ceil(totalUsersCount / pageSize)\n    let pages = []\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i)\n    }\n    const pageNumbers = pages.map((p, i) => <span\n        onClick={() => onPageChanged(p)}\n        key={i} className={currentPage === p ? s.selected : ''}\n    >{p}</span>)\n    return (\n        <div>\n            <div style={{marginBottom: '20px'}}>\n                {pageNumbers}\n            </div>\n            {users.map((user) => {\n                return (\n                    <div key={user.id} className={s.grid}>\n                        <NavLink to={`/profile/${user.id} `}>\n                            <img className={s.photo}\n                                 src={user.photos.small !== null\n                                     ? user.photos.small\n                                     : userWithoutPhoto}\n                                 alt='animated-user'/>\n                        </NavLink>\n\n                        <div className={s.follow}>\n                            {user.followed\n                                ? <button disabled={followingInProgress.some(id => id === user.id)}\n                                          onClick={() => {\n                                              unfollow(user.id)\n                                          }}>\n                                    Unfollow</button>\n                                : <button disabled={followingInProgress.some(id => id === user.id)}\n                                          onClick={() => {\n                                              follow(user.id)\n                                          }}>\n                                    follow</button>}\n                        </div>\n                        <div className={s.name}>{user.name}</div>\n                        <div className={s.status}>{user.status}</div>\n                    </div>\n                )\n            })}\n        </div>\n    )\n\n\n}","export default __webpack_public_path__ + \"static/media/Bean Eater-1.2s-197px.7923c0b5.svg\";","import preloader from \"../../../assets/imagies/Bean Eater-1.2s-197px.svg\";\nimport React, {FC} from \"react\";\ntype PreloaderPropsType = {\n\n}\n\nexport const Preloader:FC<PreloaderPropsType> = () => {\n    return (\n        <img style={{position: 'absolute', top: '40%', left: '50%'}}\n             src={preloader} alt=\"Packman\"\n        />\n    )\n}","import {connect} from \"react-redux\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {\n    follow,\n    getUsers,\n    setCurrentPage,\n    unfollow,\n    userType\n} from \"../../redux/users-reducer\";\nimport React from \"react\";\nimport {Users} from \"./Users\";\nimport {Preloader} from \"../../components/common/Preloader/Preloader\";\nimport {compose} from \"redux\";\nimport {WithAuthRedirect} from \"../../Hoc/withAuthRedirect\";\n\ntype MapStatePropsType = {\n    users: userType[]\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n    isFetching: boolean\n    followingInProgress:number[]\n}\ntype MapDispatchToProps = {\n    follow: (userId: number) => void\n    unfollow: (userId: number) => void\n    setCurrentPage: (pageNumber: number) => void\n    getUsers:(currentPage:number,pageSize:number) => void\n}\nexport type UsersApiComponentPropsType = MapStatePropsType & MapDispatchToProps\n\nexport class UsersContainer extends React.Component<UsersApiComponentPropsType> {\n    componentDidMount() {\n       this.props.getUsers(this.props.currentPage,this.props.pageSize)\n    }\n\n    onPageChanged = (pageNumber: number) => {\n        this.props.getUsers(pageNumber,this.props.pageSize)\n    }\n\n    render() {\n        return <>\n            {this.props.isFetching &&\n            <Preloader/>}\n            <Users\n                totalUsersCount={this.props.totalUsersCount}\n                pageSize={this.props.pageSize}\n                currentPage={this.props.currentPage}\n                onPageChanged={this.onPageChanged}\n                users={this.props.users}\n                follow={this.props.follow}\n                unfollow={this.props.unfollow}\n                followingInProgress={this.props.followingInProgress}\n            />\n        </>\n    }\n}\n\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\n    return {\n        users: state.usersPage.users,\n        pageSize: state.usersPage.pageSize,\n        totalUsersCount: state.usersPage.totalUsersCount,\n        currentPage: state.usersPage.currentPage,\n        isFetching: state.usersPage.isFetching,\n        followingInProgress:state.usersPage.followingInProgress\n    }\n}\n\nexport default compose<React.ComponentType>(\n    connect(mapStateToProps,\n        {\n            setCurrentPage,getUsers,follow,unfollow\n        }),\n    WithAuthRedirect\n)(UsersContainer)","import React from \"react\";\nimport { ProfileInitialStateType } from \"../../../redux/profile-reducer\";\n\nexport type EditableSpanPropsType = {\n    status: string\n    updateStatus: (status: string) => void\n}\n\n\nexport class ProfileStatus extends React.Component<EditableSpanPropsType> {\n    state = {\n        status: this.props.status,\n        editMode: true\n    }\n    componentDidUpdate(prevProps:EditableSpanPropsType,prevState:ProfileInitialStateType) {\n        if(prevProps.status !== this.props.status){\n            this.setState({\n                status:this.props.status\n            })\n        }\n    }\n\n    onDoubleClick = () => {\n        this.setState({...this.state, editMode: false})\n    }\n    onBlur = (e: any) => {\n        this.setState({...this.state, editMode: true})\n        this.props.updateStatus(e.currentTarget.value)\n    }\n    onChange = (e: any) => {\n        this.setState({...this.state, status: e.currentTarget.value})\n\n    }\n    onEnter = (e: any) => {\n        if (e.key === 'Enter') {\n            this.setState({...this.state, editMode: true, value: e.currentTarget.value})\n            this.props.updateStatus(e.currentTarget.value)\n        }\n    }\n\n    render() {\n\n        return (\n            <div>\n                {this.state.editMode\n                    ? <span\n                        onDoubleClick={this.onDoubleClick}\n                        onTouchStart={this.onDoubleClick}>{!this.props.status ? 'hey' : this.props.status}</span>\n                    : <input\n                        type=\"text\"\n                        onBlur={this.onBlur}\n                        value={this.state.status}\n                        autoFocus\n                        onChange={this.onChange}\n                        onKeyPress={this.onEnter}\n                    />\n                }\n\n\n            </div>\n\n        )\n    }\n\n}\n\nexport default ProfileStatus","import React, {FC} from \"react\";\nimport classes from \"./ProfileInfo.module.css\"\nimport {Preloader} from \"../../../components/common/Preloader/Preloader\";\nimport {ProfilePropsType} from \"../Profile\";\nimport userWithoutPhoto from '../../../assets/imagies/icons8-user-male.svg'\nimport ProfileStatus from \"./profileStatus\";\n\n\nconst ProfileInfo: FC<ProfilePropsType> = ({profile ,status ,updateStatus}) => {\n    if (!profile) {\n        return <Preloader/>\n    } else {\n        return (\n            <div>\n                <div className={classes.content}>\n                    <img src={profile.photos.small ? profile.photos.small : userWithoutPhoto} alt=\"\"/>\n\n                    <ProfileStatus status={status} updateStatus={updateStatus}/>\n\n                    <div> {profile.fullName} </div>\n                    <div> {profile.aboutMe} </div>\n                    <ul>\n                        <li>{profile.contacts.facebook ? `Facebook: ${profile.contacts.facebook}`:''}</li>\n                        <li>{profile.contacts.website}</li>\n                        <li>{profile.contacts.vk}</li>\n                        <li>{profile.contacts.twitter}</li>\n                        <li>{profile.contacts.instagram}</li>\n                        <li>{profile.contacts.youtube}</li>\n                        <li>{profile.contacts.github}</li>\n                        <li>{profile.contacts.mainLink}</li>\n                    </ul>\n                    <div>{profile.lookingForAJobDescription}</div>\n                </div>\n            </div>\n        )\n    }\n\n}\nexport default ProfileInfo","import React from \"react\";\nimport { postType } from \"../../../../redux/store\";\nimport classes from \"./Post.module.css\"\n\n\n\n\nconst Post : React.FC<postType> = (props) => {\n    return (\n        <div className={classes.post}>\n                <img className={classes.avatar}\n                     src=\"https://image.freepik.com/free-vector/cute-avocado-cartoon-icon_138676-1820.jpg\" alt=\"ss\"/>\n            <div className={classes.message}>\n                {props.message}\n            </div>\n\n            <div className={classes.like}>\n                <button>+</button>\n                {props.likeCount}</div>\n        </div>\n    )\n}\nexport default Post","import React, { FC} from \"react\";\nimport classes from \"./MyPosts.module.css\"\nimport {Field, InjectedFormProps} from \"redux-form\";\nimport {addPostExtendsFormDataType, addPostFormDataType } from \"./MyPosts\";\nimport {maxLengthCreator, required} from \"../../../utils/validate/validators\";\nimport {Textarea} from \"../../../components/common/formsControl/FormsControl\";\n\n\n\nconst maxLengthCreator10 =maxLengthCreator(10)\nexport const AddPost: FC<InjectedFormProps<addPostFormDataType> & addPostExtendsFormDataType> = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <Field className={classes.createPostArea}\n                   component={Textarea}\n                   name={'newPostText'}\n                   placeholder={'enter message'}\n                   validate={[required,maxLengthCreator10]}\n            />\n            <button className={classes.createPostBtn}>Create new Post</button>\n        </form>\n    )\n}\n","import React from \"react\";\nimport classes from \"./MyPosts.module.css\"\nimport Post from \"./Post/Post\";\nimport { reduxForm} from \"redux-form\";\nimport {MyPostPropsType} from \"./MyPostsContainer\";\nimport {AddPost} from \"./AddPost\";\n\nconst MyPosts: React.FC<MyPostPropsType> = (props) => {\n    let addNewPost = (values: addPostFormDataType) => {\n        props.addPost(values.newPostText)\n    }\n    let postsElement = props.posts.map(p => <Post id={p.id} message={p.message} likeCount={p.likeCount} key={p.id}/>)\n\n    return (\n        <div className={classes.posts}>\n            <div className={classes.createPost}>\n                <div className={classes.createPostTitle}>My posts</div>\n                <DialogsReduxForm onSubmit={addNewPost}/>\n            </div>\n            {postsElement}\n        </div>\n    )\n}\nexport type addPostFormDataType = {\n    newPostText: string\n}\nexport type addPostExtendsFormDataType = {}\nexport const DialogsReduxForm = reduxForm<addPostFormDataType, addPostExtendsFormDataType>({\n    form: 'dialogsAddMessageForm'\n})(AddPost)\nexport default MyPosts","import {postType} from \"../../../redux/store\";\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\nimport {AppStateType} from \"../../../redux/redux-store\";\nimport {Dispatch} from \"redux\";\n\ntype MapStatePropsType = {\n    posts: postType[]\n}\ntype MapDispatchToProps = {\n    addPost: (newPostText:string) => void\n}\nexport type MyPostPropsType = MapStatePropsType & MapDispatchToProps\n\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\n    return {\n        posts: state.profilePage.posts,\n    }\n}\nconst mapDispatchProps = (dispatch: Dispatch): MapDispatchToProps => {\n    return {\n        addPost: (newPostText:string) => {\n            dispatch(addPostActionCreator(newPostText))\n        }\n    }\n}\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchProps)(MyPosts)\nexport default MyPostsContainer","import React from \"react\";\nimport classes from \"./Profile.module.css\"\n\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\nimport {ProfileServerType} from \"../../redux/profile-reducer\";\n\n\nexport type ProfilePropsType = {\n    profile: null | ProfileServerType\n    status:string\n    updateStatus:(status:string) => void\n}\n\nconst Profile: React.FC<ProfilePropsType> =( { profile, status, updateStatus})=> {\n    return (\n        <div className={classes.profile}>\n            <ProfileInfo profile={profile} status={status} updateStatus={updateStatus} />\n            <MyPostsContainer  />\n        </div>\n    )\n}\nexport default Profile","import React from 'react';\nimport Profile from \"./Profile\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {getUserStatus, ProfileServerType, setUserProfile, updateUserStatus} from \"../../redux/profile-reducer\";\nimport {RouteComponentProps, withRouter} from 'react-router-dom';\nimport {connect} from \"react-redux\";\nimport {compose} from 'redux';\n\n\nexport type ProfileContainerPropsType = MapStatePropsType & MapDispatchToProps\ntype MapDispatchToProps = {\n    setUserProfile: (userId: string) => void\n    getUserStatus: (userid: string) => void\n    updateUserStatus: (status: string) => void\n}\ntype MapStatePropsType = {\n    profile: null | ProfileServerType\n    status: string\n}\ntype PathParamsType = {\n    userId: string\n}\ntype propsType = ProfileContainerPropsType & RouteComponentProps<PathParamsType>\n\nclass ProfileContainer extends React.Component<propsType> {\n    componentDidMount() {\n        let userId = this.props.match.params.userId\n        if (!userId) {\n            userId = '17798'\n        }\n        this.props.setUserProfile(userId)\n        this.props.getUserStatus(userId)\n    }\n\n    render() {\n        return (\n            <div>\n                <Profile  {...this.props}\n                          profile={this.props.profile}\n                          status={this.props.status}\n                          updateStatus={this.props.updateUserStatus}\n                />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status\n})\n// 1st wrap - redirect hoc ( custom hoc)\n// 2nd wrap - with router hoc\n//3rd wrap - connect hoc\n\nexport default compose<React.ComponentType>(\n    connect(\n        mapStateToProps, {\n            setUserProfile, updateUserStatus, getUserStatus\n        }),\n    withRouter,\n)(ProfileContainer)","import React, {FC} from \"react\";\nimport classes from \"./Header.module.css\"\nimport {MemoryRouter, NavLink} from 'react-router-dom'\nimport {HeaderContainerPropsType} from \"./HeaderContainer\";\n\n\nconst Header: FC<HeaderContainerPropsType> = props => {\n    const {\n        login,\n        isAuth,\n    } = props\n    return (\n        <header className={classes.header}>\n            <img src=\"https://i1.u-mama.ru/111/87b/b3d/3f034929b4556f4a747ca0fd40c29f08.jpg\" alt=\"animated-boy\"/>\n            <div className={classes.loginBlock}>\n                {isAuth\n                    ? login\n                    : <MemoryRouter>\n                        <NavLink to='/login'>Login</NavLink>\n                    </MemoryRouter>\n                }\n            </div>\n        </header>\n    )\n};\nexport default Header;","import React from \"react\";\nimport Header from \"./Header\";\nimport { connect } from \"react-redux\";\nimport {getAuthUserData} from \"../../redux/auth-reducer\";\nimport {AppStateType} from \"../../redux/redux-store\";\n\nexport type HeaderContainerPropsType = MapStatePropsType & MapDispatchToProps\ntype MapDispatchToProps = {\n    getAuthUserData:()=>void\n}\ntype MapStatePropsType = {\n    isAuth: boolean\n    login: string | null\n}\n\nclass HeaderContainer extends React.Component<HeaderContainerPropsType> {\n    componentDidMount() {\n       this.props.getAuthUserData()\n    }\n\n    render() {\n        return (\n            <Header {...this.props}/>\n        )\n    }\n\n}\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => ({\n    isAuth: state.auth.isAuth,\n    login: state.auth.login\n})\nexport default connect(mapStateToProps,{getAuthUserData}) (HeaderContainer)","import {Field, InjectedFormProps, reduxForm} from \"redux-form\";\nimport {FC} from \"react\";\nimport {Input} from \"../common/formsControl/FormsControl\";\n\nimport { required } from \"../../utils/validate/validators\";\n\ninterface formDataType {\n    email:string\n    password:string\n    rememberMe:boolean\n}\nexport const LoginForm:FC<InjectedFormProps<formDataType>> = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <Field  placeholder={'Login'} component={Input} name={'login'} validate={[required]}/>\n            <Field  placeholder={'password'} component={Input} name={'password'} validate={[required]}/>\n            <div style={{display:\"flex\",alignItems:\"center\"}}>\n                <Field type=\"checkbox\" component={'input'} name={'rememberMe'} />\n                <label htmlFor=\"{'rememberMe'}\">remember me</label>\n            </div>\n\n            <button>Login</button>\n        </form>\n    )\n}\n\nexport const LoginReduxForm = reduxForm<formDataType>({\n    form:'login'\n})(LoginForm)\n\n","import React from 'react'\nimport {LoginReduxForm} from \"../../components/loginForm/LoginForm\";\nimport classes from './loginPage.module.css'\n\nexport const LoginPage = () => {\n\n    return (\n        <div className={classes.loginPage}>\n            {/*<h1>Login</h1>*/}\n            <div className={classes.loginForm}>\n                <LoginReduxForm />\n            </div>\n        </div>\n\n    )\n}","import React from 'react';\nimport './App.css';\nimport Navbar from \"./components/navbar/Navbar\";\nimport Footer from \"./components/footer/Footer\";\nimport { Route} from 'react-router-dom';\nimport News from \"./pages/News/News\";\nimport Music from './pages/Music/Music';\nimport Settings from \"./pages/Settings/Settings\";\nimport DialogsContainer from \"./pages/dialogs/DialogsContainer\";\nimport UsersContainer from './pages/users/usersContainer';\nimport ProfileContainer from './pages/profile/ProfileContainer';\nimport HeaderContainer from \"./components/header/HeaderContainer\";\nimport {LoginPage} from \"./pages/login/loginPage\";\nconst App: React.FC = ()  => {\n    return (\n            <div className=\"App\">\n                <HeaderContainer/>\n                <Navbar/>\n                <div className=\"App-wrapper-content\">\n                    <Route path='/profile/:userId?'\n                           render={() => <ProfileContainer/>}/>\n                    <Route path='/dialogs'\n                           render={() => <DialogsContainer/>}/>\n                    <Route path='/users'\n                           render={() => <UsersContainer/>}/>\n                    <Route path='/login'\n                           render={() => <LoginPage/>}/>\n                    <Route path='/news' component={News}/>\n                    <Route path='/music' component={Music}/>\n                    <Route path='/settings' component={Settings}/>\n                </div>\n                <Footer/>\n            </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./redux/redux-store\";\nimport ReactDOM from \"react-dom\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport App from \"./App\";\nimport {Provider} from \"react-redux\";\n\n\n\n    ReactDOM.render(\n        <React.StrictMode>\n            <BrowserRouter>\n                <Provider store={store}>\n                    <App/>\n                </Provider>\n            </BrowserRouter>\n        </React.StrictMode>,document.getElementById('root')\n    )\n\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"DialogItem_grid__cimMD\",\"dialog\":\"DialogItem_dialog__-gwuU\",\"dialogUsername\":\"DialogItem_dialogUsername__2Wdhe\",\"active\":\"DialogItem_active__1ypez\",\"dialogAvatar\":\"DialogItem_dialogAvatar__2yo0F\",\"dialogText\":\"DialogItem_dialogText__hea5r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__NGOkO\",\"dialogsHeader\":\"Dialogs_dialogsHeader__3a2W5\",\"dialogItems\":\"Dialogs_dialogItems__3Ri9H\",\"messages\":\"Dialogs_messages__1u87f\",\"message\":\"Dialogs_message__2zHqf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__1I5jP\",\"createPost\":\"MyPosts_createPost__2gifI\",\"createPostTitle\":\"MyPosts_createPostTitle__wdmaw\",\"createPostArea\":\"MyPosts_createPostArea__1yyUo\",\"createPostBtn\":\"MyPosts_createPostBtn__1xF5q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"users_grid__33E5T\",\"photo\":\"users_photo__3XtN5\",\"follow\":\"users_follow__1wF7B\",\"name\":\"users_name__12Lg8\",\"status\":\"users_status__3UmQ9\",\"country\":\"users_country__tRhhc\",\"city\":\"users_city__mT0Zm\",\"selected\":\"users_selected__37Vpm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__2gvJ0\",\"error\":\"FormsControl_error__3qwFS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__2jKTs\",\"avatar\":\"Post_avatar__sVTKg\",\"message\":\"Post_message__15MVK\",\"like\":\"Post_like__2r9_N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"news\":\"News_news__Q92op\",\"newsTitle\":\"News_newsTitle__2sD-C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1qW2j\",\"loginBlock\":\"Header_loginBlock__3rAmo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginPage\":\"loginPage_loginPage__j0Zjz\",\"loginForm\":\"loginPage_loginForm__3o3tc\"};"],"sourceRoot":""}