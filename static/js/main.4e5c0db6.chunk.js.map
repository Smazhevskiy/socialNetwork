{"version":3,"sources":["dal/api.ts","redux/app-reducer.ts","reportWebVitals.ts","redux/redux-store.ts","components/navbar/Navbar.tsx","components/footer/Footer.tsx","pages/News/News.tsx","pages/Music/Music.tsx","pages/Settings/Settings.tsx","components/header/Header.tsx","components/header/HeaderContainer.tsx","components/navbar/friends/Friends.tsx","Hoc/WithSuspense.tsx","App.tsx","index.tsx","redux/auth-reducer.ts","assets/imagies/Bean Eater-1.2s-197px.svg","components/common/Preloader/Preloader.tsx","redux/users-reducer.ts","utils/Object-helpers.ts","components/header/Header.module.css","pages/News/News.module.css","redux/profile-reducer.ts","components/navbar/Navbar.module.css","redux/dialogs-reducer.ts","pages/users/User.tsx","assets/imagies/icons8-user-male.svg","components/footer/Footer.module.css"],"names":["instance","axios","create","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","follow","userId","post","unfollow","delete","getProfileUser","console","log","profileAPI","getUserProfile","getFriends","getUserStatus","updateUserStatus","status","put","authAPI","authMe","login","email","password","rememberMe","captcha","logout","AUTH_ACTIONS_TYPE","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","initialized","rootReducer","combineReducers","profilePage","profileReducer","dialogsPage","dialogsReducer","usersPage","usersReducer","auth","authReducer","app","state","action","type","SET_INITIALIZED_SUCCESS","form","formReducer","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","useTypedSelector","useSelector","window","__store__","Navbar","className","classes","nav","item","to","activeClassName","active","friendName","grid","Footer","footer","News","news","newsTitle","Music","Settings","Header","props","isAuth","header","src","alt","loginBlock","onClick","HeaderContainer","this","React","Component","connect","Friends","dispatch","useDispatch","friends","requestFriends","map","fr","User","user","followingInProgress","WithSuspense","WrappedComponent","restProps","Suspense","fallback","Preloader","Login","lazy","ProfileContainer","DialogsContainer","UsersContainer","App","appState","useEffect","a","promise","getAuthUserData","Promise","all","path","render","component","ReactDOM","StrictMode","document","getElementById","setUserData","payload","res","data","resultCode","id","message","messages","length","stopSubmit","_error","SET_USER_DATA","style","position","top","left","preloader","USERS_ACTIONS_TYPE","updateObjectInArray","items","itemId","objPropName","newObjProps","users","totalUsersCount","isFetching","followSuccess","unFollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","requestUsers","page","count","totalCount","followUnfollowFlow","apiMethod","actionCreator","bind","FOLLOW","followed","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FETCHING_PROGRESS","filter","SET_FRIENDS","module","exports","PROFILE_ACTIONS_TYPE","addPostActionCreator","newPostText","setUserStatus","setUserProfile","profile","posts","likeCount","ADD_POST","newPost","SET_USERS_PROFILE","SET_STATUS","p","postId","DIALOGS_ACTIONS_TYPE","dialogs","name","img","sendMessageCreator","messageText","SEND_MESSAGE","newMessage","s","photo","photos","small","userWithoutPhoto","disabled","some"],"mappings":"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","file":"static/js/main.4e5c0db6.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport type UserResponseType = {\n    items : UserType[]\n    totalCount: number\n    error: string\n}\nexport interface ResponseType<T = {}> {\n    resultCode: number\n    messages: string[],\n    data: T\n}\nexport type UserType = {\n    id: number\n    name: string\n    status: string\n    photos: {\n        small: string\n        large: string\n    }\n    followed: boolean\n}\nexport type AuthDataType = {\n    id: number\n    email: string\n    login: string\n}\nexport type UserProfileType = {\n    aboutMe: string\n    contacts: {\n        facebook: string\n        website: string\n        vk: string\n        twitter: string\n        instagram: string\n        youtube: string\n        github: string\n        mainLink: string\n    }\n    lookingForAJob: boolean,\n    lookingForAJobDescription: string\n    fullName: string\n    userId: number\n    photos: {\n        small: string\n        large: string\n    }\n}\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    headers: {\n        'API-KEY': '65933dcc-6afe-43bc-af50-63aed10a4c85'\n    }\n})\nexport const usersAPI = {\n    getUsers(currentPage: number = 1, pageSize: number = 10) {\n        return instance.get<UserResponseType>(`users?page=${currentPage}&count=${pageSize}`)\n    },\n    follow(userId: number) {\n        return instance.post<ResponseType<UserType>>(`follow/${userId}`)\n    },\n    // maybe refactor\n    unfollow(userId: number) {\n        return instance.delete<ResponseType>(`follow/${userId}`)\n    },\n\n    getProfileUser(userId: number) {\n        console.log('Please use profileAPI ti get users.')\n        return profileAPI.getUserProfile(userId)\n    },\n    getFriends() {\n        return instance.get<UserResponseType>(`users?&friend=${true}`)\n    }\n\n}\nexport const profileAPI = {\n    getUserProfile(userId: number) {\n        return instance.get<UserProfileType>(`profile/${userId}`)\n    },\n    getUserStatus(userId: number) {\n        return instance.get(`profile/status/${userId}`)\n    },\n    updateUserStatus(status: string) {\n        return instance.put<ResponseType<UserType>>(`profile/status`, {\n            status: status\n        })\n    },\n\n}\nexport const authAPI = {\n    authMe() {\n        return instance.get<ResponseType<AuthDataType>>(`auth/me`)\n    },\n    login(email:string,password:string,rememberMe:boolean=false,captcha:boolean) {\n        return instance.post<ResponseType<{userId:number}>>(`auth/login` , {\n            email,\n            password,\n            rememberMe,\n            captcha\n        })\n    },\n    logout() {\n        return instance.delete<ResponseType>(`auth/login`)\n    }\n}","import {AppThunk} from \"./redux-store\";\nimport {getAuthUserData} from \"./auth-reducer\";\n\n\nexport enum AUTH_ACTIONS_TYPE {\n    SET_INITIALIZED_SUCCESS = 'SET_INITIALIZED_SUCCESS',\n}\n\n\nexport type AppStateType = typeof initialState\n\nlet initialState = {\n    initialized:true\n}\nexport type appActionTypes =   ReturnType<typeof initializedSuccess>\n\nexport const initializedSuccess = () => ({\n    type:'SET_INITIALIZED_SUCCESS'} as const )\n\nexport const initializeApp = ():AppThunk => async (dispatch) => {\n    let promise = dispatch(getAuthUserData())\n    await Promise.all([promise])\n    dispatch(initializedSuccess())\n}\n\n\n\nexport const appReducer = (state: AppStateType = initialState, action: appActionTypes): AppStateType => {\n    switch (action.type) {\n        case AUTH_ACTIONS_TYPE.SET_INITIALIZED_SUCCESS: {\n            return {\n                ...state,\n                initialized: true\n            }\n        }\n        default:\n            return state\n    }\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers} from \"redux\";\nimport {createStore} from \"redux\";\nimport profileReducer, {profileActionsType} from \"./profile-reducer\";\nimport dialogsReducer, {dialogsActionsType} from \"./dialogs-reducer\";\nimport usersReducer, {userActionsType} from \"./users-reducer\";\nimport {authActionTypes, authReducer} from \"./auth-reducer\";\nimport thunkMiddleware, {ThunkAction} from 'redux-thunk'\nimport {composeWithDevTools} from \"redux-devtools-extension\";\nimport {FormAction, reducer as formReducer} from 'redux-form'\nimport {appActionTypes, appReducer} from \"./app-reducer\";\nimport {TypedUseSelectorHook, useSelector} from \"react-redux\";\n\n\nlet rootReducer = combineReducers({\n    profilePage: profileReducer,\n    dialogsPage: dialogsReducer,\n    usersPage: usersReducer,\n    auth: authReducer,\n    app: appReducer,\n    form: formReducer\n})\nexport type AllActionsType =\n    authActionTypes\n    | userActionsType\n    | dialogsActionsType\n    | profileActionsType\n    | FormAction\n    | appActionTypes\n//thunk type\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, AppRootStateType, unknown, AllActionsType>\n\nexport type AppRootStateType = ReturnType<typeof rootReducer>\nlet store = createStore(\n    rootReducer, composeWithDevTools(\n        applyMiddleware(thunkMiddleware)\n    )\n)\nexport const useTypedSelector: TypedUseSelectorHook<AppRootStateType> = useSelector\n// (window as any).__REDUX_DEVTOOLS_EXTENSION__ && (window as any).__REDUX_DEVTOOLS_EXTENSION__()\nexport default store\n\n// @ts-ignore\nwindow.__store__ = store","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport classes from \"./Navbar.module.css\"\n\n\n\nconst Navbar = () => {\n    // let sidebarMap = props.store.getState().navbarPage.friends.map(f => <Friends id={f.id} name={f.name} img={f.img}/>)\n    return (\n        <nav className={classes.nav}>\n            <div className={classes.item}>\n                <NavLink to='/profile'\n                         activeClassName={classes.active}>Profile</NavLink>\n            </div>\n            <div className={classes.item}>\n                <NavLink to='/users'\n                         activeClassName={classes.active}>Users</NavLink>\n            </div>\n            <div className={`${classes.item} ${classes.active}`}>\n                <NavLink to='/dialogs'\n                         activeClassName={classes.active}> Dialogs</NavLink>\n            </div>\n            <div className={classes.item}>\n                <NavLink to='/news'\n                         activeClassName={classes.active}>News</NavLink>\n            </div>\n            <div className={classes.item}>\n                <NavLink to='/music'\n                         activeClassName={classes.active}>Music</NavLink>\n            </div>\n            <div className={classes.item}>\n                <NavLink to='/settings'\n                         activeClassName={classes.active}>Settings</NavLink>\n            </div>\n            <div >\n                <NavLink to='/friends' className={classes.friendName}>Friends</NavLink>\n                <div className={classes.grid}>{/*{sidebarMap}*/} </div>\n            </div>\n        </nav>\n    )\n}\nexport default Navbar","import React from \"react\";\nimport classes from \"./Footer.module.css\"\nconst Footer = ()=> {\n    return (\n        <footer className={classes.footer}>\n            footer\n        </footer>\n    )\n}\nexport default Footer","import React from 'react'\nimport classes from './News.module.css';\n\nconst News = () => {\n    return  (\n        <div >\n            <div className={classes.news}>\n                <div className={classes.newsTitle}>News</div>\n            </div>\n        </div>\n    )\n}\nexport default News","import React from 'react'\n\nconst Music = () => {\n    return  (\n        <div>\n            Music\n        </div>\n    )\n}\nexport default Music","import React from 'react'\n\nconst Settings = () => {\n    return  (\n        <div>\n            Settings\n        </div>\n    )\n}\nexport default Settings","import React, {FC} from \"react\";\nimport classes from \"./Header.module.css\"\nimport { NavLink} from 'react-router-dom'\nimport {HeaderContainerPropsType} from \"./HeaderContainer\";\n\n\nconst Header: FC<HeaderContainerPropsType> = props => {\n    const {\n        login,\n        isAuth,\n        logout\n    } = props\n    return (\n        <header className={classes.header}>\n            <img src=\"https://i1.u-mama.ru/111/87b/b3d/3f034929b4556f4a747ca0fd40c29f08.jpg\" alt=\"animated-boy\"/>\n            <div className={classes.loginBlock}>\n                {isAuth\n                    ? <div className={classes.loginBlock}>\n                        {login}\n                        <button onClick={logout}>logout</button>\n                    </div>\n                    :\n                    <NavLink to='/login'>Login</NavLink>\n                }\n            </div>\n        </header>\n    )\n};\nexport default Header;\n\n// {isAuth\n//     ? login\n//     : <MemoryRouter>\n//         <NavLink to='/login'>Login</NavLink>\n//     </MemoryRouter>\n// }","import React from \"react\";\nimport Header from \"./Header\";\nimport {connect} from \"react-redux\";\nimport {logout} from \"../../redux/auth-reducer\";\nimport {AppRootStateType} from \"../../redux/redux-store\";\n\nexport type HeaderContainerPropsType = MapStatePropsType & MapDispatchToProps\n\ntype MapDispatchToProps = {\n    logout: () => void\n}\ntype MapStatePropsType = {\n    isAuth: boolean\n    login: string | null\n}\n\nclass HeaderContainer extends React.Component<HeaderContainerPropsType> {\n    render() {\n        return (\n            <Header {...this.props}/>\n        )\n    }\n\n}\n\nconst mapStateToProps = (state: AppRootStateType): MapStatePropsType => ({\n    isAuth: state.auth.isAuth,\n    login: state.auth.login\n})\nexport default connect(mapStateToProps, {logout})(HeaderContainer)","import {useDispatch, useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../../../redux/redux-store\";\nimport {requestFriends, setFriends, UsersStateType} from \"../../../redux/users-reducer\";\nimport {UserType} from \"../../../dal/api\";\nimport {User} from \"../../../pages/users/User\";\n\n\ntype FriendsType={\n    followingInProgress: number []\n    follow: (userId: number) => void\n    unfollow: (userId: number) => void\n}\nexport const Friends = (props:FriendsType) => {\n    const dispatch = useDispatch();\n\n    const friends = useSelector<AppRootStateType, UserType[]>(state => state.usersPage.friends)\n    dispatch(requestFriends())\n    return (\n        <div>\n            {\n                friends.map(fr=> <User\n                    user={fr}\n                    followingInProgress={props.followingInProgress}\n                    follow={props.follow}\n                    unfollow={props.unfollow}\n                    />\n                )\n            }\n\n            friends\n        </div>\n    )\n}","import React from 'react'\r\nimport {Preloader} from \"../components/common/Preloader/Preloader\";\r\n\r\n\r\nexport function WithSuspense<WCP>(WrappedComponent: React.ComponentType<WCP>) {\r\n    return (props: any) => {\r\n        let {...restProps} = props\r\n        return (\r\n            <React.Suspense fallback={<Preloader/>}>\r\n                <WrappedComponent {...restProps as WCP}/>\r\n            </React.Suspense>\r\n        )\r\n    }\r\n}","import React, {useEffect} from 'react';\nimport './App.css';\nimport Navbar from \"./components/navbar/Navbar\";\nimport Footer from \"./components/footer/Footer\";\nimport {Route} from 'react-router-dom';\nimport News from \"./pages/News/News\";\nimport Music from './pages/Music/Music';\nimport Settings from \"./pages/Settings/Settings\";\nimport HeaderContainer from \"./components/header/HeaderContainer\";\nimport {useDispatch} from \"react-redux\";\nimport {useTypedSelector} from \"./redux/redux-store\";\nimport {AppStateType, initializeApp} from \"./redux/app-reducer\";\nimport {Preloader} from \"./components/common/Preloader/Preloader\";\nimport {Friends} from \"./components/navbar/friends/Friends\";\nimport {WithSuspense} from \"./Hoc/WithSuspense\";\n\n\nconst Login = React.lazy(() => import('./pages/login/loginPage'))\nconst ProfileContainer = React.lazy(() => import('./pages/profile/ProfileContainer'))\nconst DialogsContainer = React.lazy(() => import('./pages/dialogs/DialogsContainer'))\nconst UsersContainer = React.lazy(() => import('./pages/users/UsersContainer'))\n\nconst App = () => {\n    const dispatch = useDispatch()\n    const appState = useTypedSelector<AppStateType>((state) => state.app)\n    useEffect(() => {\n        dispatch(initializeApp())\n    }, [dispatch])\n    if (!appState.initialized) {\n        return <Preloader/>\n    }\n\n    return (\n        <div className=\"App\">\n            <HeaderContainer/>\n            <Navbar/>\n            <div className=\"App-wrapper-content\">\n                <Route path=\"/profile/:userid?\" render={WithSuspense(ProfileContainer)}/>\n                <Route path=\"/dialogs\" render={WithSuspense(DialogsContainer)}/>\n                <Route path=\"/users\" render={WithSuspense(UsersContainer)}/>\n                <Route path=\"/login\" render={WithSuspense(Login)}/>\n                <Route path='/news' component={News}/>\n                <Route path='/music' component={Music}/>\n                <Route path='/settings' component={Settings}/>\n                <Route path='/friends' component={Friends}/>\n            </div>\n            <Footer/>\n        </div>\n    );\n}\nexport default App\n","import React from 'react';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./redux/redux-store\";\nimport ReactDOM from \"react-dom\";\nimport {HashRouter} from \"react-router-dom\";\nimport App from \"./App\";\nimport {Provider} from \"react-redux\";\n\n\n\n    ReactDOM.render(\n        <React.StrictMode>\n            <HashRouter>\n                <Provider store={store}>\n                    <App/>\n                </Provider>\n            </HashRouter>\n        </React.StrictMode>,document.getElementById('root')\n    )\n\n\nreportWebVitals();\n","import {authAPI} from \"../dal/api\";\r\nimport {AppThunk} from \"./redux-store\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nexport enum AUTH_ACTIONS_TYPE {\r\n    SET_USER_DATA = 'auth/SET_USER_DATA',\r\n}\r\n\r\n\r\ntype AuthStateType = typeof initialState\r\nlet initialState = {\r\n    userId: null as null | number,\r\n    email: null as null | string,\r\n    login: null as null | string,\r\n    isAuth: true //need false\r\n}\r\nexport type authActionTypes =   ReturnType<typeof setUserData>\r\n\r\nexport const setUserData = (userId:number| null,email:string | null,login:string |null,isAuth:boolean) => ({\r\n    type:'auth/SET_USER_DATA',payload:{userId,email,login,isAuth}} as const )\r\n\r\nexport const getAuthUserData = ():AppThunk => async (dispatch) => {\r\n    const res = await authAPI.authMe()\r\n    if (res.data.resultCode === 0) {\r\n        let {id, email, login} = res.data.data\r\n        dispatch(setUserData(id, email, login,true))\r\n    }\r\n    return res\r\n}\r\nexport const login = (email:string,password:string,rememberMe:boolean,captcha:boolean):AppThunk =>  async (dispatch) => {\r\n    let res = await authAPI.login(email, password, rememberMe, captcha)\r\n    if (res.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else  {\r\n        let message = res.data.messages.length > 0 ? res.data.messages[0] : 'some error'\r\n        dispatch(stopSubmit('login', {_error: message}))\r\n    }\r\n}\r\nexport const logout = ():AppThunk =>  async (dispatch) => {\r\n    let res = await authAPI.logout()\r\n    if (res.data.resultCode === 0) {\r\n        dispatch(setUserData(null, null, null,false))\r\n    }\r\n}\r\n\r\n\r\nexport const authReducer = (state: AuthStateType = initialState, action: authActionTypes): AuthStateType => {\r\n    switch (action.type) {\r\n        case AUTH_ACTIONS_TYPE.SET_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/Bean Eater-1.2s-197px.7923c0b5.svg\";","import preloader from \"../../../assets/imagies/Bean Eater-1.2s-197px.svg\";\nimport React, {FC} from \"react\";\ntype PreloaderPropsType = {\n\n}\n\nexport const Preloader:FC<PreloaderPropsType> = () => {\n    return (\n        <img style={{position: 'absolute', top: '40%', left: '50%'}}\n             src={preloader} alt=\"Packman\"\n        />\n    )\n}","import {Dispatch} from \"redux\";\nimport {usersAPI, UserType} from \"../dal/api\";\nimport {AppThunk} from \"./redux-store\";\nimport {updateObjectInArray} from \"../utils/Object-helpers\";\n\nexport enum USERS_ACTIONS_TYPE {\n    FOLLOW = 'users/FOLLOW',\n    UNFOLLOW = 'users/UNFOLLOW',\n    SET_USERS = 'users/SET_USERS',\n    SET_CURRENT_PAGE = 'users/SET_CURRENT_PAGE',\n    SET_TOTAL_USERS_COUNT = 'users/SET_TOTAL_USERS_COUNT',\n    TOGGLE_IS_FETCHING = 'users/TOGGLE_IS_FETCHING',\n    TOGGLE_IS_FETCHING_PROGRESS = 'users/TOGGLE_IS_FETCHING_PROGRESS',\n    SET_FRIENDS = 'users/SET_FRIENDS'\n}\n\nexport type serverUsers = {\n    users: UserType[]\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n}\n\nexport type UsersStateType = typeof initialState\n\nlet initialState = {\n    users: [] as UserType[],\n    pageSize: 20,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: true,\n    followingInProgress: [] as number[],\n    friends: [] as UserType []\n}\n\nexport type userActionsType =\n    ReturnType<typeof followSuccess>\n    | ReturnType<typeof unFollowSuccess>\n    | ReturnType<typeof setUsers>\n    | ReturnType<typeof setCurrentPage>\n    | ReturnType<typeof setTotalUsersCount>\n    | ReturnType<typeof toggleIsFetching>\n    | ReturnType<typeof toggleFollowingProgress>\n    | ReturnType<typeof setFriends>\n\n\nexport const followSuccess = (userId: number) => ({type: 'users/FOLLOW', userId}) as const\nexport const unFollowSuccess = (userId: number) => ({type: 'users/UNFOLLOW', userId}) as const\nexport const setUsers = (users: UserType[]) => ({type: 'users/SET_USERS', users}) as const\nexport const setFriends = (friends: UserType[]) => ({type: 'users/SET_FRIENDS', friends}) as const\nexport const setCurrentPage = (currentPage: number) => ({type: 'users/SET_CURRENT_PAGE', currentPage}) as const\nexport const setTotalUsersCount = (totalUsersCount: number) => ({\n    type: 'users/SET_TOTAL_USERS_COUNT',\n    count: totalUsersCount\n}) as const\nexport const toggleIsFetching = (isFetching: boolean) => ({\n    type: 'users/TOGGLE_IS_FETCHING',\n    isFetching: isFetching\n}) as const\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number) => ({\n    type: 'users/TOGGLE_IS_FETCHING_PROGRESS',\n    isFetching,\n    userId\n}) as const\n\nexport const requestUsers = (page: number, pageSize: number): AppThunk => async (dispatch: Dispatch) => {\n    dispatch(toggleIsFetching(true))\n    dispatch(setCurrentPage(page))\n    let res = await usersAPI.getUsers(page, pageSize)\n    dispatch(toggleIsFetching(false))\n    dispatch(setUsers(res.data.items))\n    dispatch(setTotalUsersCount(res.data.totalCount))\n}\n\nexport const requestFriends = (): AppThunk => async (dispatch: Dispatch) => {\n    dispatch(toggleIsFetching(true))\n    let res = await usersAPI.getFriends()\n    dispatch(toggleIsFetching(false))\n    dispatch(setFriends(res.data.items))\n}\n\n\nconst followUnfollowFlow = async (dispatch: Dispatch, userId: number, apiMethod: any, actionCreator: any) => {\n    dispatch(toggleFollowingProgress(true, userId))\n    let res = await apiMethod(userId)\n    if (res.data.resultCode === 0) {\n        dispatch(actionCreator(userId))\n    }\n    dispatch(toggleFollowingProgress(false, userId))\n}\n\n\nexport const follow = (userId: number): AppThunk => async (dispatch: Dispatch) => {\n    await followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess)\n}\nexport const unfollow = (userId: number): AppThunk => async (dispatch: Dispatch) => {\n    await followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unFollowSuccess)\n}\n\nexport const usersReducer = (state: UsersStateType = initialState, action: userActionsType): UsersStateType => {\n    switch (action.type) {\n        case USERS_ACTIONS_TYPE.FOLLOW :\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})\n                // users: state.users.map(user => {\n                //     if (user.id === action.userId) {\n                //         return {...user, followed: true}\n                //     }\n                //     return user\n                // })\n            }\n        case USERS_ACTIONS_TYPE.UNFOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\n                // users: state.users.map(user => {\n                //     if (user.id === action.userId) {\n                //         return {...user, followed: false}\n                //     }\n                //     return user\n                // })\n            }\n        case USERS_ACTIONS_TYPE.SET_USERS : {\n            return {...state, users: action.users}\n        }\n        case  USERS_ACTIONS_TYPE.SET_CURRENT_PAGE: {\n            return {...state, currentPage: action.currentPage}\n        }\n        case USERS_ACTIONS_TYPE.SET_TOTAL_USERS_COUNT : {\n            return {...state, totalUsersCount: action.count}\n        }\n        case USERS_ACTIONS_TYPE.TOGGLE_IS_FETCHING : {\n            return {...state, isFetching: action.isFetching}\n        }\n        case USERS_ACTIONS_TYPE.TOGGLE_IS_FETCHING_PROGRESS: {\n            return {\n                ...state,\n                followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter(id => id !== action.userId)\n            }\n        }\n        case  USERS_ACTIONS_TYPE.SET_FRIENDS: {\n            return {...state, friends: action.friends}\n        }\n\n        default :\n            return state\n    }\n}\nexport default usersReducer","import {UserType} from \"../dal/api\";\r\n\r\n\r\nexport const updateObjectInArray = (items: UserType[], itemId: number, objPropName: string, newObjProps: any) => {\r\n    return items.map((user: any) => {\r\n        if (user[objPropName] === itemId) {\r\n            return {...user, ...newObjProps}\r\n        }\r\n        return user\r\n    })\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1qW2j\",\"loginBlock\":\"Header_loginBlock__3rAmo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"news\":\"News_news__Q92op\",\"newsTitle\":\"News_newsTitle__2sD-C\"};","import {Dispatch} from \"redux\";\nimport {profileAPI, UserProfileType, usersAPI} from \"../dal/api\";\n\n\nexport enum PROFILE_ACTIONS_TYPE {\n    ADD_POST = 'profile/ADD_POST',\n    SET_USERS_PROFILE = 'profile/SET_USERS_PROFILE',\n    SET_STATUS = 'profile/SET_STATUS',\n}\n\nexport type PostType = {\n    id: number\n    message: string\n    likeCount: number\n}\nexport type profileActionsType =\n    ReturnType<typeof addPostActionCreator>\n    | ReturnType<typeof setUsersProfileSuccess>\n    | ReturnType<typeof setUserStatus>\n    | ReturnType<typeof deletePostActionCreator>\n\n\nexport const addPostActionCreator = (newPostText: string) => ({type: 'profile/ADD_POST', newPostText} as const)\n\nexport const setUsersProfileSuccess = (profile: UserProfileType) => ({\n    type: 'profile/SET_USERS_PROFILE',\n    profile\n} as const)\nexport const setUserStatus = (status: string) => ({type: 'profile/SET_STATUS', status} as const)\nexport const deletePostActionCreator = (postId: string | number) => ({type: 'profile/DELETE_POST', postId} as const)\n\nexport const setUserProfile = (userId: number) => async (dispatch: Dispatch) => {\n    const res = await usersAPI.getProfileUser(userId);\n    dispatch(setUsersProfileSuccess(res.data));\n}\n\n\nexport const getUserStatus = (userId: number) => async (dispatch: Dispatch) => {\n    const res = await profileAPI.getUserStatus(userId);\n    dispatch(setUserStatus(res.data));\n}\n\nexport const updateUserStatus = (status: string) => async (dispatch: Dispatch) => {\n    const res = await profileAPI.updateUserStatus(status);\n    if (res.data.resultCode === 0) {\n        dispatch(setUserStatus(status));\n    }\n}\n\nexport type ProfileInitialStateType = typeof initialState\nlet initialState = {\n    posts: [\n        {id: 1, message: 'Hello bro', likeCount: 0},\n    ] as Array<PostType>,\n    profile: null as null | UserProfileType,\n    status: ''\n}\nconst profileReducer = (state: ProfileInitialStateType = initialState, action: profileActionsType): ProfileInitialStateType => {\n    switch (action.type) {\n        case PROFILE_ACTIONS_TYPE.ADD_POST : {\n            let newPost: PostType = {\n                id: 5,\n                message: action.newPostText,\n                likeCount: 0\n            }\n            if (action.newPostText !== '') {\n                return {\n                    ...state,\n                    posts: [...state.posts, newPost],\n                }\n            }\n            return state\n        }\n        case PROFILE_ACTIONS_TYPE.SET_USERS_PROFILE : {\n            return {\n                ...state,\n                profile: action.profile\n            }\n        }\n        case PROFILE_ACTIONS_TYPE.SET_STATUS : {\n            return {\n                ...state, status: action.status\n            }\n        }\n        case \"profile/DELETE_POST\":\n            return {...state, posts: state.posts.filter(p => p.id !== action.postId)}\n        default :\n            return state\n    }\n}\nexport default profileReducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1RChf\",\"item\":\"Navbar_item__Qin6T\",\"active\":\"Navbar_active__Siz7Z\",\"grid\":\"Navbar_grid__2OMsl\",\"friendName\":\"Navbar_friendName__VOdSD\"};","export enum DIALOGS_ACTIONS_TYPE{\n    SEND_MESSAGE = 'dialogs/SEND_MESSAGE',\n}\n\nexport type dialogType = { id: number, name: string, img: string }\nexport type messageType = { id: number, message: string }\nexport type DialogsPageStateType = typeof initialState\nlet initialState = {\n    dialogs: [\n        {\n            id: 1,\n            name: \"Archi\",\n            img: 'https://cs4.pikabu.ru/post_img/big/2015/03/10/5/1425968564_1301750843.jpg'\n        },\n        {\n            id: 2,\n            name: \"Dimich\",\n            img: 'http://rasfokus.ru/images/photos/medium/71e226a2972b39c54360dfec99765e66.jpg'\n        },\n        {\n            id: 3,\n            name: \"The_Kot\",\n            img: 'https://i1.u-mama.ru/111/87b/b3d/3f034929b4556f4a747ca0fd40c29f08.jpg'\n        },\n    ] as dialogType[],\n    messages: [\n        {id: 1, message: '1st post'},\n        {id: 2, message: 'How is your s ds'},\n        {id: 3, message: 'Hi'},\n        {id: 4, message: 'yoo'},\n    ] as messageType[],\n}\n\nexport type dialogsActionsType = ReturnType<typeof sendMessageCreator>\n\nexport const sendMessageCreator = (messageText:string) => ({type: 'dialogs/SEND_MESSAGE',messageText}as const )\n\nconst dialogsReducer = (state: DialogsPageStateType = initialState, action: dialogsActionsType): DialogsPageStateType => {\n\n    switch (action.type) {\n        case DIALOGS_ACTIONS_TYPE.SEND_MESSAGE: {\n            let newMessage: messageType = {id: 6, message: action.messageText}\n            if (action.messageText !== '') {\n                return {\n                    ...state,\n                    messages: [...state.messages, newMessage]\n                }\n            }\n            return state\n        }\n        default :\n            return state\n    }\n}\n\n\nexport default dialogsReducer\n\n\n","import React, {FC} from 'react'\r\nimport s from \"./User.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport userWithoutPhoto from './../../../src/assets/imagies/icons8-user-male.svg'\r\nimport {UserType} from \"../../dal/api\";\r\n\r\n\r\ninterface userProps {\r\n    user: UserType\r\n    followingInProgress: number[]\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n}\r\n\r\nexport const User: FC<userProps> = ({user, follow, unfollow, followingInProgress}) => {\r\n    return (\r\n        <div key={user.id} className={s.grid}>\r\n            <NavLink to={`/profile/${user.id} `}>\r\n                <img className={s.photo}\r\n                     src={user.photos.small !== null\r\n                         ? user.photos.small\r\n                         : userWithoutPhoto}\r\n                     alt='animated-user'/>\r\n            </NavLink>\r\n\r\n            <div className={s.follow}>\r\n                {user.followed\r\n                    ? <button disabled={followingInProgress.some(id => id === user.id)}\r\n                              onClick={() => {\r\n                                  unfollow(user.id)\r\n                              }}>\r\n                        Unfollow</button>\r\n                    : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                              onClick={() => {\r\n                                  follow(user.id)\r\n                              }}>\r\n                        follow</button>}\r\n            </div>\r\n            <div className={s.name}>{user.name}</div>\r\n            <div className={s.status}>{user.status}</div>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/icons8-user-male.be2cd3f6.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__29X5M\"};"],"sourceRoot":""}