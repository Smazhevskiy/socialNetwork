{"version":3,"sources":["redux/app-reducer.ts","reportWebVitals.ts","redux/redux-store.ts","components/navbar/Navbar.tsx","components/footer/Footer.tsx","pages/News/News.tsx","pages/Music/Music.tsx","pages/Settings/Settings.tsx","components/header/Header.tsx","components/header/HeaderContainer.tsx","components/navbar/friends/Friends.tsx","Hoc/WithSuspense.tsx","App.tsx","index.tsx","redux/auth-reducer.ts","assets/imagies/Bean Eater-1.2s-197px.svg","components/common/Preloader/Preloader.tsx","components/header/Header.module.css","pages/News/News.module.css","redux/profile-reducer.ts","components/navbar/Navbar.module.css","redux/dialogs-reducer.ts","redux/users-reducer.ts","utils/Object-helpers.ts","components/footer/Footer.module.css","dal/api.ts"],"names":["AUTH_ACTIONS_TYPE","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","initialized","rootReducer","combineReducers","profilePage","profileReducer","dialogsPage","dialogsReducer","usersPage","usersReducer","auth","authReducer","app","state","action","type","SET_INITIALIZED_SUCCESS","form","formReducer","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","useTypedSelector","useSelector","window","__store__","Navbar","className","classes","nav","item","to","activeClassName","active","friendName","grid","Footer","footer","News","news","newsTitle","Music","Settings","Header","props","login","isAuth","logout","header","src","alt","loginBlock","onClick","HeaderContainer","this","React","Component","connect","Friends","WithSuspense","WrappedComponent","restProps","Suspense","fallback","Preloader","Login","lazy","ProfileContainer","DialogsContainer","UsersContainer","App","dispatch","useDispatch","appState","useEffect","a","promise","getAuthUserData","Promise","all","path","render","component","ReactDOM","StrictMode","document","getElementById","userId","email","setUserData","payload","authAPI","authMe","res","data","resultCode","id","password","rememberMe","captcha","message","messages","length","stopSubmit","_error","SET_USER_DATA","style","position","top","left","preloader","module","exports","PROFILE_ACTIONS_TYPE","addPostActionCreator","newPostText","setUserStatus","status","setUserProfile","usersAPI","getProfileUser","profile","getUserStatus","profileAPI","updateUserStatus","savePhoto","file","photos","posts","likeCount","ADD_POST","newPost","SET_USERS_PROFILE","SET_STATUS","filter","p","postId","DIALOGS_ACTIONS_TYPE","dialogs","name","img","sendMessageCreator","messageText","SEND_MESSAGE","newMessage","USERS_ACTIONS_TYPE","updateObjectInArray","items","itemId","objPropName","newObjProps","map","user","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","followSuccess","unFollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","requestUsers","page","friend","getUsers","count","totalCount","followUnfollowFlow","apiMethod","actionCreator","follow","bind","unfollow","FOLLOW","followed","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FETCHING_PROGRESS","instance","axios","create","withCredentials","baseURL","headers","get","post","delete","getUserProfile","getFriends","put","photoFile","formData","FormData","append"],"mappings":"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","file":"static/js/main.c3248686.chunk.js","sourcesContent":["import {AppThunk} from \"./redux-store\";\nimport {getAuthUserData} from \"./auth-reducer\";\n\n\nexport enum AUTH_ACTIONS_TYPE {\n    SET_INITIALIZED_SUCCESS = 'SET_INITIALIZED_SUCCESS',\n}\n\n\nexport type AppStateType = typeof initialState\n\nlet initialState = {\n    initialized:false\n}\nexport type appActionTypes =   ReturnType<typeof initializedSuccess>\n\nexport const initializedSuccess = () => ({\n    type:'SET_INITIALIZED_SUCCESS'} as const )\n\nexport const initializeApp = ():AppThunk => async (dispatch) => {\n    let promise = dispatch(getAuthUserData())\n    await Promise.all([promise])\n    dispatch(initializedSuccess())\n}\n\n\n\nexport const appReducer = (state: AppStateType = initialState, action: appActionTypes): AppStateType => {\n    switch (action.type) {\n        case AUTH_ACTIONS_TYPE.SET_INITIALIZED_SUCCESS: {\n            return {\n                ...state,\n                initialized: true\n            }\n        }\n        default:\n            return state\n    }\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers} from \"redux\";\nimport {createStore} from \"redux\";\nimport profileReducer, {profileActionsType} from \"./profile-reducer\";\nimport dialogsReducer, {dialogsActionsType} from \"./dialogs-reducer\";\nimport usersReducer, {userActionsType} from \"./users-reducer\";\nimport {authActionTypes, authReducer} from \"./auth-reducer\";\nimport thunkMiddleware, {ThunkAction} from 'redux-thunk'\nimport {composeWithDevTools} from \"redux-devtools-extension\";\nimport {FormAction, reducer as formReducer} from 'redux-form'\nimport {appActionTypes, appReducer} from \"./app-reducer\";\nimport {TypedUseSelectorHook, useSelector} from \"react-redux\";\n\n\nlet rootReducer = combineReducers({\n    profilePage: profileReducer,\n    dialogsPage: dialogsReducer,\n    usersPage: usersReducer,\n    auth: authReducer,\n    app: appReducer,\n    form: formReducer\n})\nexport type AllActionsType =\n    authActionTypes\n    | userActionsType\n    | dialogsActionsType\n    | profileActionsType\n    | FormAction\n    | appActionTypes\n//thunk type\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, AppRootStateType, unknown, AllActionsType>\n\nexport type AppRootStateType = ReturnType<typeof rootReducer>\nlet store = createStore(\n    rootReducer, composeWithDevTools(\n        applyMiddleware(thunkMiddleware)\n    )\n)\nexport const useTypedSelector: TypedUseSelectorHook<AppRootStateType> = useSelector\n// (window as any).__REDUX_DEVTOOLS_EXTENSION__ && (window as any).__REDUX_DEVTOOLS_EXTENSION__()\nexport default store\n\n// @ts-ignore\nwindow.__store__ = store","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport classes from \"./Navbar.module.css\"\n\n\n\nconst Navbar = () => {\n    // let sidebarMap = props.store.getState().navbarPage.friends.map(f => <Friends id={f.id} name={f.name} img={f.img}/>)\n    return (\n        <nav className={classes.nav}>\n            <div className={classes.item}>\n                <NavLink to='/profile'\n                         activeClassName={classes.active}>Profile</NavLink>\n            </div>\n            <div className={classes.item}>\n                <NavLink to='/users'\n                         activeClassName={classes.active}>Users</NavLink>\n            </div>\n            <div className={`${classes.item} ${classes.active}`}>\n                <NavLink to='/dialogs'\n                         activeClassName={classes.active}> Dialogs</NavLink>\n            </div>\n            <div className={classes.item}>\n                <NavLink to='/news'\n                         activeClassName={classes.active}>News</NavLink>\n            </div>\n            <div className={classes.item}>\n                <NavLink to='/music'\n                         activeClassName={classes.active}>Music</NavLink>\n            </div>\n            <div className={classes.item}>\n                <NavLink to='/settings'\n                         activeClassName={classes.active}>Settings</NavLink>\n            </div>\n            <div >\n                <NavLink to='/friends' className={classes.friendName}>Friends</NavLink>\n                <div className={classes.grid}>{/*{sidebarMap}*/} </div>\n            </div>\n        </nav>\n    )\n}\nexport default Navbar","import React from \"react\";\nimport classes from \"./Footer.module.css\"\nconst Footer = ()=> {\n    return (\n        <footer className={classes.footer}>\n            footer\n        </footer>\n    )\n}\nexport default Footer","import React from 'react'\nimport classes from './News.module.css';\n\nconst News = () => {\n    return  (\n        <div >\n            <div className={classes.news}>\n                <div className={classes.newsTitle}>News</div>\n            </div>\n        </div>\n    )\n}\nexport default News","import React from 'react'\n\nconst Music = () => {\n    return  (\n        <div>\n            Music\n        </div>\n    )\n}\nexport default Music","import React from 'react'\n\nconst Settings = () => {\n    return  (\n        <div>\n            Settings\n        </div>\n    )\n}\nexport default Settings","import React, {FC} from \"react\";\nimport classes from \"./Header.module.css\"\nimport { NavLink} from 'react-router-dom'\nimport {HeaderContainerPropsType} from \"./HeaderContainer\";\n\n\nconst Header: FC<HeaderContainerPropsType> = props => {\n    const {\n        login,\n        isAuth,\n        logout\n    } = props\n    return (\n        <header className={classes.header}>\n            <img src=\"https://i1.u-mama.ru/111/87b/b3d/3f034929b4556f4a747ca0fd40c29f08.jpg\" alt=\"animated-boy\"/>\n            <div className={classes.loginBlock}>\n                {isAuth\n                    ? <div className={classes.loginBlock}>\n                        {login}\n                        <button onClick={logout}>logout</button>\n                    </div>\n                    :\n                    <NavLink to='/login'>Login</NavLink>\n                }\n            </div>\n        </header>\n    )\n};\nexport default Header;\n\n// {isAuth\n//     ? login\n//     : <MemoryRouter>\n//         <NavLink to='/login'>Login</NavLink>\n//     </MemoryRouter>\n// }","import React from \"react\";\nimport Header from \"./Header\";\nimport {connect} from \"react-redux\";\nimport {logout} from \"../../redux/auth-reducer\";\nimport {AppRootStateType} from \"../../redux/redux-store\";\n\nexport type HeaderContainerPropsType = MapStatePropsType & MapDispatchToProps\n\ntype MapDispatchToProps = {\n    logout: () => void\n}\ntype MapStatePropsType = {\n    isAuth: boolean\n    login: string | null\n}\n\nclass HeaderContainer extends React.Component<HeaderContainerPropsType> {\n    render() {\n        return (\n            <Header {...this.props}/>\n        )\n    }\n\n}\n\nconst mapStateToProps = (state: AppRootStateType): MapStatePropsType => ({\n    isAuth: state.auth.isAuth,\n    login: state.auth.login\n})\nexport default connect(mapStateToProps, {logout})(HeaderContainer)","import {FC} from 'react'\n\n\nexport const Friends: FC<any> = (props) => {\n\n    return (\n        <div>\n            hello\n        </div>\n    )\n}","import React from 'react'\r\nimport {Preloader} from \"../components/common/Preloader/Preloader\";\r\n\r\n\r\nexport function WithSuspense<WCP>(WrappedComponent: React.ComponentType<WCP>) {\r\n    return (props: any) => {\r\n        let {...restProps} = props\r\n        return (\r\n            <React.Suspense fallback={<Preloader/>}>\r\n                <WrappedComponent {...restProps as WCP}/>\r\n            </React.Suspense>\r\n        )\r\n    }\r\n}","import React, {useEffect} from 'react';\nimport './App.css';\nimport Navbar from \"./components/navbar/Navbar\";\nimport Footer from \"./components/footer/Footer\";\nimport {Route} from 'react-router-dom';\nimport News from \"./pages/News/News\";\nimport Music from './pages/Music/Music';\nimport Settings from \"./pages/Settings/Settings\";\nimport HeaderContainer from \"./components/header/HeaderContainer\";\nimport {useDispatch} from \"react-redux\";\nimport {useTypedSelector} from \"./redux/redux-store\";\nimport {AppStateType, initializeApp} from \"./redux/app-reducer\";\nimport {Preloader} from \"./components/common/Preloader/Preloader\";\nimport {Friends} from \"./components/navbar/friends/Friends\";\nimport {WithSuspense} from \"./Hoc/WithSuspense\";\n\n\nconst Login = React.lazy(() => import('./pages/login/loginPage'))\nconst ProfileContainer = React.lazy(() => import('./pages/profile/ProfileContainer'))\nconst DialogsContainer = React.lazy(() => import('./pages/dialogs/DialogsContainer'))\nconst UsersContainer = React.lazy(() => import('./pages/users/UsersContainer'))\n\nconst App = () => {\n    const dispatch = useDispatch()\n    const appState = useTypedSelector<AppStateType>((state) => state.app)\n    useEffect(() => {\n        dispatch(initializeApp())\n    }, [dispatch])\n    if (!appState.initialized) {\n        return <Preloader/>\n    }\n\n    return (\n        <div className=\"App\">\n            <HeaderContainer/>\n            <Navbar/>\n            <div className=\"App-wrapper-content\">\n                <Route path=\"/profile/:userid?\" render={WithSuspense(ProfileContainer)}/>\n                <Route path=\"/dialogs\" render={WithSuspense(DialogsContainer)}/>\n                <Route path=\"/users\" render={WithSuspense(UsersContainer)}/>\n                <Route path=\"/login\" render={WithSuspense(Login)}/>\n                <Route path='/news' component={News}/>\n                <Route path='/music' component={Music}/>\n                <Route path='/settings' component={Settings}/>\n                <Route path='/friends' component={Friends}/>\n            </div>\n            <Footer/>\n        </div>\n    );\n}\nexport default App\n","import React from 'react';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./redux/redux-store\";\nimport ReactDOM from \"react-dom\";\nimport {HashRouter} from \"react-router-dom\";\nimport App from \"./App\";\nimport {Provider} from \"react-redux\";\n\n\n\n    ReactDOM.render(\n        <React.StrictMode>\n            <HashRouter>\n                <Provider store={store}>\n                    <App/>\n                </Provider>\n            </HashRouter>\n        </React.StrictMode>,document.getElementById('root')\n    )\n\n\nreportWebVitals();\n","import {authAPI} from \"../dal/api\";\r\nimport {AppThunk} from \"./redux-store\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nexport enum AUTH_ACTIONS_TYPE {\r\n    SET_USER_DATA = 'auth/SET_USER_DATA',\r\n}\r\n\r\n\r\ntype AuthStateType = typeof initialState\r\nlet initialState = {\r\n    userId: null as null | number,\r\n    email: null as null | string,\r\n    login: null as null | string,\r\n    isAuth: false //need false\r\n}\r\nexport type authActionTypes = ReturnType<typeof setUserData>\r\n\r\nexport const setUserData = (userId: number | null, email: string | null, login: string | null, isAuth: boolean) => ({\r\n    type: 'auth/SET_USER_DATA', payload: {userId, email, login, isAuth}\r\n} as const)\r\n\r\nexport const getAuthUserData = (): AppThunk => async (dispatch) => {\r\n    const res = await authAPI.authMe()\r\n    if (res.data.resultCode === 0) {\r\n        let {id, email, login} = res.data.data\r\n        dispatch(setUserData(id, email, login, true))\r\n    }\r\n    return res\r\n}\r\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: boolean): AppThunk => async (dispatch) => {\r\n    let res = await authAPI.login(email, password, rememberMe, captcha)\r\n    if (res.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        let message = res.data.messages.length > 0 ? res.data.messages[0] : 'some error'\r\n        dispatch(stopSubmit('login', {_error: message}))\r\n    }\r\n}\r\nexport const logout = (): AppThunk => async (dispatch) => {\r\n    let res = await authAPI.logout()\r\n    if (res.data.resultCode === 0) {\r\n        dispatch(setUserData(null, null, null, false))\r\n    }\r\n}\r\n\r\n\r\nexport const authReducer = (state: AuthStateType = initialState, action: authActionTypes): AuthStateType => {\r\n    switch (action.type) {\r\n        case AUTH_ACTIONS_TYPE.SET_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/Bean Eater-1.2s-197px.7923c0b5.svg\";","import preloader from \"../../../assets/imagies/Bean Eater-1.2s-197px.svg\";\nimport React, {FC} from \"react\";\ntype PreloaderPropsType = {\n\n}\n\nexport const Preloader:FC<PreloaderPropsType> = () => {\n    return (\n        <img style={{position: 'absolute', top: '40%', left: '50%'}}\n             src={preloader} alt=\"Packman\"\n        />\n    )\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1ZKcV\",\"loginBlock\":\"Header_loginBlock__22BqA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"news\":\"News_news__IJ4CC\",\"newsTitle\":\"News_newsTitle__RiA5e\"};","import {Dispatch} from 'redux'\nimport {profileAPI, UserProfileType, usersAPI} from '../dal/api'\n\n\nexport enum PROFILE_ACTIONS_TYPE {\n    ADD_POST = 'profile/ADD_POST',\n    SET_USERS_PROFILE = 'profile/SET_USERS_PROFILE',\n    SET_STATUS = 'profile/SET_STATUS',\n}\n\nexport type PhotosType = {\n    small: string | null\n    large: string | null\n}\n\nexport type PostType = {\n    id: number\n    message: string\n    likeCount: number\n}\nexport type profileActionsType =\n    ReturnType<typeof addPostActionCreator>\n    | ReturnType<typeof setUsersProfileSuccess>\n    | ReturnType<typeof setUserStatus>\n    | ReturnType<typeof deletePostActionCreator>\n\n\nexport const addPostActionCreator = (newPostText: string) => ({type: 'profile/ADD_POST', newPostText} as const)\n\nexport const setUsersProfileSuccess = (profile: UserProfileType) => ({\n    type: 'profile/SET_USERS_PROFILE',\n    profile\n} as const)\nexport const setUserStatus = (status: string) => ({type: 'profile/SET_STATUS', status} as const)\nexport const deletePostActionCreator = (postId: string | number) => ({type: 'profile/DELETE_POST', postId} as const)\nexport const savePhotoSuccess = (photos: PhotosType) => ({type: 'profile/SAVE-PHOTO-SUCCESS', photos} as const)\n\n\nexport const setUserProfile = (userId: number) => async (dispatch: Dispatch) => {\n    const res = await usersAPI.getProfileUser(userId);\n    dispatch(setUsersProfileSuccess(res.data));\n}\n\n\nexport const getUserStatus = (userId: number) => async (dispatch: Dispatch) => {\n    const res = await profileAPI.getUserStatus(userId);\n    dispatch(setUserStatus(res.data));\n}\n\nexport const updateUserStatus = (status: string) => async (dispatch: Dispatch) => {\n    const res = await profileAPI.updateUserStatus(status);\n    if (res.data.resultCode === 0) {\n        dispatch(setUserStatus(status));\n    }\n}\n\nexport const savePhoto = (file: File) => async (dispatch: Dispatch) => {\n        const data = await profileAPI.savePhoto(file)\n        if (data.resultCode === 0) {\n            dispatch(savePhotoSuccess(data.data.photos))\n        }\n    }\n\nexport type ProfileInitialStateType = typeof initialState\nlet initialState = {\n    posts: [\n        {id: 1, message: 'Hello bro', likeCount: 0},\n    ] as Array<PostType>,\n    profile: null as null | UserProfileType,\n    status: ''\n}\nconst profileReducer = (state: ProfileInitialStateType = initialState, action: profileActionsType): ProfileInitialStateType => {\n    switch (action.type) {\n        case PROFILE_ACTIONS_TYPE.ADD_POST : {\n            let newPost: PostType = {\n                id: 5,\n                message: action.newPostText,\n                likeCount: 0\n            }\n            if (action.newPostText !== '') {\n                return {\n                    ...state,\n                    posts: [...state.posts, newPost],\n                }\n            }\n            return state\n        }\n        case PROFILE_ACTIONS_TYPE.SET_USERS_PROFILE : {\n            return {\n                ...state,\n                profile: action.profile\n            }\n        }\n        case PROFILE_ACTIONS_TYPE.SET_STATUS : {\n            return {\n                ...state, status: action.status\n            }\n        }\n        case \"profile/DELETE_POST\":\n            return {...state, posts: state.posts.filter(p => p.id !== action.postId)}\n        default :\n            return state\n    }\n}\nexport default profileReducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3Ljh5\",\"item\":\"Navbar_item__d_GGs\",\"active\":\"Navbar_active__G7RlO\",\"grid\":\"Navbar_grid__3v0Lu\",\"friendName\":\"Navbar_friendName__3Ixkk\"};","export enum DIALOGS_ACTIONS_TYPE{\n    SEND_MESSAGE = 'dialogs/SEND_MESSAGE',\n}\n\nexport type dialogType = { id: number, name: string, img: string }\nexport type messageType = { id: number, message: string }\nexport type DialogsPageStateType = typeof initialState\nlet initialState = {\n    dialogs: [\n        {\n            id: 1,\n            name: \"Archi\",\n            img: 'https://cs4.pikabu.ru/post_img/big/2015/03/10/5/1425968564_1301750843.jpg'\n        },\n        {\n            id: 2,\n            name: \"Dimich\",\n            img: 'http://rasfokus.ru/images/photos/medium/71e226a2972b39c54360dfec99765e66.jpg'\n        },\n        {\n            id: 3,\n            name: \"The_Kot\",\n            img: 'https://i1.u-mama.ru/111/87b/b3d/3f034929b4556f4a747ca0fd40c29f08.jpg'\n        },\n    ] as dialogType[],\n    messages: [\n        {id: 1, message: '1st post'},\n        {id: 2, message: 'How is your s ds'},\n        {id: 3, message: 'Hi'},\n        {id: 4, message: 'yoo'},\n    ] as messageType[],\n}\n\nexport type dialogsActionsType = ReturnType<typeof sendMessageCreator>\n\nexport const sendMessageCreator = (messageText:string) => ({type: 'dialogs/SEND_MESSAGE',messageText}as const )\n\nconst dialogsReducer = (state: DialogsPageStateType = initialState, action: dialogsActionsType): DialogsPageStateType => {\n\n    switch (action.type) {\n        case DIALOGS_ACTIONS_TYPE.SEND_MESSAGE: {\n            let newMessage: messageType = {id: 6, message: action.messageText}\n            if (action.messageText !== '') {\n                return {\n                    ...state,\n                    messages: [...state.messages, newMessage]\n                }\n            }\n            return state\n        }\n        default :\n            return state\n    }\n}\n\n\nexport default dialogsReducer\n\n\n","import {Dispatch} from 'redux'\nimport {usersAPI, UserType} from '../dal/api'\nimport {AppThunk} from './redux-store'\nimport {updateObjectInArray} from '../utils/Object-helpers'\n\nexport enum USERS_ACTIONS_TYPE {\n    FOLLOW = 'users/FOLLOW',\n    UNFOLLOW = 'users/UNFOLLOW',\n    SET_USERS = 'users/SET_USERS',\n    SET_CURRENT_PAGE = 'users/SET_CURRENT_PAGE',\n    SET_TOTAL_USERS_COUNT = 'users/SET_TOTAL_USERS_COUNT',\n    TOGGLE_IS_FETCHING = 'users/TOGGLE_IS_FETCHING',\n    TOGGLE_IS_FETCHING_PROGRESS = 'users/TOGGLE_IS_FETCHING_PROGRESS',\n}\n\nexport type serverUsers = {\n    users: UserType[]\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n}\n\nexport type UsersStateType = typeof initialState\n\nlet initialState = {\n    users: [] as UserType[],\n    pageSize: 10,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: true,\n    followingInProgress: [] as number[],\n}\n\nexport type userActionsType =\n    ReturnType<typeof followSuccess>\n    | ReturnType<typeof unFollowSuccess>\n    | ReturnType<typeof setUsers>\n    | ReturnType<typeof setCurrentPage>\n    | ReturnType<typeof setTotalUsersCount>\n    | ReturnType<typeof toggleIsFetching>\n    | ReturnType<typeof toggleFollowingProgress>\n\n\nexport const followSuccess = (userId: number) => ({type: 'users/FOLLOW', userId}) as const\nexport const unFollowSuccess = (userId: number) => ({type: 'users/UNFOLLOW', userId}) as const\nexport const setUsers = (users: UserType[]) => ({type: 'users/SET_USERS', users}) as const\nexport const setCurrentPage = (currentPage: number) => ({type: 'users/SET_CURRENT_PAGE', currentPage}) as const\nexport const setTotalUsersCount = (totalUsersCount: number) => ({\n    type: 'users/SET_TOTAL_USERS_COUNT',\n    count: totalUsersCount\n}) as const\nexport const toggleIsFetching = (isFetching: boolean) => ({\n    type: 'users/TOGGLE_IS_FETCHING',\n    isFetching: isFetching\n}) as const\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number) => ({\n    type: 'users/TOGGLE_IS_FETCHING_PROGRESS',\n    isFetching,\n    userId\n}) as const\n\nexport const requestUsers = (page: number, pageSize: number, friend?: boolean): AppThunk => async (dispatch: Dispatch) => {\n    dispatch(toggleIsFetching(true))\n    dispatch(setCurrentPage(page))\n    let res = await usersAPI.getUsers(page, pageSize)\n    dispatch(toggleIsFetching(false))\n    dispatch(setUsers(res.data.items))\n    dispatch(setTotalUsersCount(res.data.totalCount))\n}\n\n\nconst followUnfollowFlow = async (dispatch: Dispatch, userId: number, apiMethod: any, actionCreator: any) => {\n    dispatch(toggleFollowingProgress(true, userId))\n    let res = await apiMethod(userId)\n    if (res.data.resultCode === 0) {\n        dispatch(actionCreator(userId))\n    }\n    dispatch(toggleFollowingProgress(false, userId))\n}\n\n\nexport const follow = (userId: number): AppThunk => async (dispatch: Dispatch) => {\n    await followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess)\n}\nexport const unfollow = (userId: number): AppThunk => async (dispatch: Dispatch) => {\n    await followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unFollowSuccess)\n}\n\nexport const usersReducer = (state: UsersStateType = initialState, action: userActionsType): UsersStateType => {\n    switch (action.type) {\n        case USERS_ACTIONS_TYPE.FOLLOW :\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})\n            }\n        case USERS_ACTIONS_TYPE.UNFOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\n            }\n        case USERS_ACTIONS_TYPE.SET_USERS : {\n            return {...state, users: action.users}\n        }\n        case  USERS_ACTIONS_TYPE.SET_CURRENT_PAGE: {\n            return {...state, currentPage: action.currentPage}\n        }\n        case USERS_ACTIONS_TYPE.SET_TOTAL_USERS_COUNT : {\n            return {...state, totalUsersCount: action.count}\n        }\n        case USERS_ACTIONS_TYPE.TOGGLE_IS_FETCHING : {\n            return {...state, isFetching: action.isFetching}\n        }\n        case USERS_ACTIONS_TYPE.TOGGLE_IS_FETCHING_PROGRESS: {\n            return {\n                ...state,\n                followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter(id => id !== action.userId)\n            }\n        }\n        default :\n            return state\n    }\n}\nexport default usersReducer","import {UserType} from \"../dal/api\";\r\n\r\n\r\nexport const updateObjectInArray = (items: UserType[], itemId: number, objPropName: string, newObjProps: any) => {\r\n    return items.map((user: any) => {\r\n        if (user[objPropName] === itemId) {\r\n            return {...user, ...newObjProps}\r\n        }\r\n        return user\r\n    })\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__2ygyq\"};","import axios from \"axios\";\n\nexport type UserResponseType = {\n    items: UserType[]\n    totalCount: number\n    error: string\n}\n\nexport interface ResponseType<T = {}> {\n    resultCode: number\n    messages: string[],\n    data: T\n}\n\nexport type UserType = {\n    id: number\n    name: string\n    status: string\n    photos: {\n        small: string\n        large: string\n    }\n    followed: boolean\n}\nexport type AuthDataType = {\n    id: number\n    email: string\n    login: string\n}\nexport type UserProfileType = {\n    aboutMe: string\n    contacts: {\n        facebook: string\n        website: string\n        vk: string\n        twitter: string\n        instagram: string\n        youtube: string\n        github: string\n        mainLink: string\n    }\n    lookingForAJob: boolean,\n    lookingForAJobDescription: string\n    fullName: string\n    userId: number\n    photos: {\n        small: string\n        large: string\n    }\n}\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    headers: {\n        'API-KEY': '65933dcc-6afe-43bc-af50-63aed10a4c85',\n        // 'Content-Type': 'multipart/form-data'\n    }\n})\nexport const usersAPI = {\n    getUsers(currentPage: number = 1, pageSize: number = 10, friend?:boolean) {\n        return instance.get<UserResponseType>(`users?page=${currentPage}&count=${pageSize}`)\n    },\n    follow(userId: number) {\n        return instance.post<ResponseType<UserType>>(`follow/${userId}`)\n    },\n    unfollow(userId: number) {\n        return instance.delete<ResponseType>(`follow/${userId}`)\n    },\n\n    getProfileUser(userId: number) {\n        return profileAPI.getUserProfile(userId)\n    },\n    getFriends() {\n        return instance.get<UserResponseType>(`users?users?page=${1}&count=${10}friend=${true}`)\n    }\n\n}\nexport const profileAPI = {\n    getUserProfile(userId: number) {\n        return instance.get<UserProfileType>(`profile/${userId}`)\n    },\n    getUserStatus(userId: number) {\n        return instance.get(`profile/status/${userId}`)\n    },\n    updateUserStatus(status: string) {\n        return instance.put<ResponseType<UserType>>(`profile/status`, {\n            status\n        })\n    },\n    savePhoto(photoFile: File) {\n        const formData = new FormData()\n        formData.append('image', photoFile)\n        return instance.put(`profile/photo`, formData, {})\n            .then(res => res.data)\n    },\n\n}\nexport const authAPI = {\n    authMe() {\n        return instance.get<ResponseType<AuthDataType>>(`auth/me`)\n    },\n    login(email: string, password: string, rememberMe: boolean = false, captcha: boolean) {\n        return instance.post<ResponseType<{ userId: number }>>(`auth/login`, {\n            email,\n            password,\n            rememberMe,\n            captcha\n        })\n    },\n    logout() {\n        return instance.delete<ResponseType>(`auth/login`)\n    }\n}"],"sourceRoot":""}